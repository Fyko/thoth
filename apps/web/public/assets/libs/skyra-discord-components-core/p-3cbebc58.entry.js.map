{
  "version": 3,
  "names": [
    "discordActionRowCss",
    "DiscordActionRow",
    "render",
    "h",
    "Host",
    "class",
    "padZeroes",
    "value",
    "month",
    "day",
    "year",
    "split",
    "padStart",
    "formatDate",
    "Date",
    "getMonth",
    "getDate",
    "getFullYear",
    "formatTime",
    "hour24",
    "getHours",
    "getMinutes",
    "toString",
    "hour",
    "meridiem",
    "handleTimestamp",
    "useTime",
    "TypeError",
    "IMAGE_EXTENSION",
    "validateImageExtension",
    "url",
    "test",
    "Error",
    "getGlobalEmojiUrl",
    "emojiName",
    "_a",
    "_b",
    "window",
    "$discordMessage",
    "emojis",
    "discordAttachmentCss",
    "DiscordAttachment",
    "componentWillRender",
    "this",
    "style",
    "height",
    "width",
    "alt",
    "src",
    "discordAttachmentsCss",
    "DiscordAttachments",
    "DiscordBold",
    "Fragment",
    "_props",
    "children",
    "LaunchIcon",
    "props",
    "Object",
    "assign",
    "viewBox",
    "fill",
    "d",
    "discordButtonCss",
    "DiscordButton",
    "handleType",
    "includes",
    "RangeError",
    "parent",
    "el",
    "parentElement",
    "tagName",
    "toLowerCase",
    "content",
    "emoji",
    "draggable",
    "disabled",
    "href",
    "target",
    "rel",
    "type",
    "CommandIcon",
    "xmlns",
    "discordCommandCss",
    "DiscordCommand",
    "resolveAvatar",
    "avatar",
    "avatars",
    "default",
    "defaultData",
    "author",
    "bot",
    "verified",
    "server",
    "roleColor",
    "profileData",
    "Reflect",
    "get",
    "profiles",
    "profile",
    "messageParent",
    "compactMode",
    "color",
    "_c",
    "command",
    "discordCustomEmojiCss",
    "DiscordCustomEmoji",
    "Boolean",
    "name",
    "emojiFromGlobal",
    "embedEmoji",
    "_d",
    "emojiClassName",
    "emojiImageClassName",
    "r",
    "e",
    "t",
    "f",
    "n",
    "Array",
    "isArray",
    "length",
    "clsx",
    "arguments",
    "discordEmbedCss",
    "DiscordEmbed",
    "hasPerformedRerenderChecks",
    "componentDidRender",
    "discordEmbedDescriptionChild",
    "querySelector",
    "hasProvidedDescriptionSlot",
    "innerHTML",
    "trim",
    "emojiParsedAuthorName",
    "parseTitle",
    "authorName",
    "emojiParsedEmbedTitle",
    "embedTitle",
    "provider",
    "authorImage",
    "authorUrl",
    "image",
    "video",
    "renderMedia",
    "thumbnail",
    "controls",
    "muted",
    "preload",
    "poster",
    "title",
    "words",
    "map",
    "word",
    "idx",
    "discordEmbedDescriptionCss",
    "DiscordEmbedDescription",
    "discordEmbedFieldCss",
    "DiscordEmbedField",
    "validInlineIndices",
    "Set",
    "checkInlineIndex",
    "has",
    "Number",
    "inlineIndex",
    "SyntaxError",
    "emojiParsedEmbedFieldTitle",
    "fieldTitle",
    "inline",
    "discordEmbedFieldsCss",
    "DiscordEmbedFields",
    "discordEmbedFooterCss",
    "DiscordEmbedFooter",
    "updateTimestamp",
    "isNaN",
    "getTime",
    "timestamp",
    "footerImage",
    "DiscordInlineCode",
    "GuildBadge",
    "PartnerBadgeOverlay",
    "VerifiedBadgeOverlay",
    "discordInviteCss",
    "DiscordInvite",
    "defaultDiscordAvatars",
    "blue",
    "inviteTitle",
    "icon",
    "partnered",
    "online",
    "toLocaleString",
    "members",
    "joinBtn",
    "DiscordItalic",
    "removeHash",
    "hex",
    "charAt",
    "slice",
    "parseHex",
    "nakedHex",
    "isShort",
    "twoDigitHexR",
    "concat",
    "twoDigitHexG",
    "twoDigitHexB",
    "twoDigitHexA",
    "g",
    "b",
    "a",
    "hexToDecimal",
    "parseInt",
    "hexesToDecimals",
    "_ref",
    "toFixed",
    "isNumeric",
    "parseFloat",
    "isFinite",
    "formatRgb",
    "decimalObject",
    "parameterA",
    "parsedA",
    "hexToRgba",
    "hashlessHex",
    "hexObject",
    "build",
    "ChannelForum",
    "ChannelIcon",
    "ChannelThread",
    "LockedVoiceChannel",
    "VoiceChannel",
    "discordMentionCss",
    "DiscordMention",
    "componentDidLoad",
    "addEventListener",
    "setHoverColor",
    "bind",
    "resetHoverColor",
    "disconnectedCallback",
    "removeEventListener",
    "backgroundColor",
    "colorStyle",
    "mentionPrepend",
    "VerifiedTick",
    "AuthorInfo",
    "op",
    "roleIcon",
    "roleName",
    "compact",
    "Ephemeral",
    "discordMessageCss",
    "DiscordMessage",
    "twentyFour",
    "highlightMention",
    "from",
    "some",
    "child",
    "highlight",
    "hasThread",
    "ephemeral",
    "_e",
    "_f",
    "_g",
    "_h",
    "_j",
    "_k",
    "_l",
    "_m",
    "_o",
    "_p",
    "_q",
    "_r",
    "_s",
    "_t",
    "edited",
    "discordMessagesCss",
    "DiscordMessages",
    "lightTheme",
    "defaultTheme",
    "defaultMode",
    "noBackground",
    "defaultBackground",
    "discordQuoteCss",
    "DiscordQuote",
    "discordReactionCss",
    "DiscordReaction",
    "reacted",
    "onClick",
    "handleReactionClick",
    "count",
    "event",
    "interactive",
    "shiftKey",
    "discordReactionsCss",
    "DiscordReactions",
    "AttachmentReply",
    "CommandReply",
    "ReplyIcon",
    "discordReplyCss",
    "DiscordReply",
    "mentions",
    "attachment",
    "discordSpoilerCss",
    "DiscordSpoiler",
    "Boost",
    "DMCall",
    "DMEdit",
    "DMMissedCall",
    "Pin",
    "SystemAlert",
    "SystemError",
    "Thread",
    "UserJoin",
    "UserLeave",
    "stroke",
    "discordSystemMessageCss",
    "DiscordSystemMessage",
    "channelName",
    "discordTenorVideoCss",
    "DiscordTenorVideo",
    "autoplay",
    "loop",
    "discordThreadCss",
    "DiscordThread",
    "cta",
    "discordThreadMessageCss",
    "DiscordThreadMessage",
    "relativeTimestamp",
    "discordTimeCss",
    "DiscordTime",
    "DiscordUnderlined"
  ],
  "sources": [
    "./src/components/discord-action-row/discord-action-row.css?tag=discord-action-row",
    "./src/components/discord-action-row/discord-action-row.tsx",
    "./src/util.ts",
    "./src/components/discord-attachment/discord-attachment.css?tag=discord-attachment",
    "./src/components/discord-attachment/discord-attachment.tsx",
    "./src/components/discord-attachments/discord-attachments.css?tag=discord-attachments",
    "./src/components/discord-attachments/discord-attachments.tsx",
    "./src/components/discord-bold/discord-bold.tsx",
    "./src/Fragment.tsx",
    "./src/components/svgs/launch-icon.tsx",
    "./src/components/discord-button/discord-button.css?tag=discord-button",
    "./src/components/discord-button/discord-button.tsx",
    "./src/components/svgs/command-icon.tsx",
    "./src/components/discord-command/discord-command.css?tag=discord-command",
    "./src/components/discord-command/discord-command.tsx",
    "./src/components/discord-custom-emoji/discord-custom-emoji.css?tag=discord-custom-emoji",
    "./src/components/discord-custom-emoji/discord-custom-emoji.tsx",
    "../../node_modules/clsx/dist/clsx.m.js",
    "./src/components/discord-embed/discord-embed.css?tag=discord-embed",
    "./src/components/discord-embed/discord-embed.tsx",
    "./src/components/discord-embed-description/discord-embed-description.css?tag=discord-embed-description",
    "./src/components/discord-embed-description/discord-embed-description.tsx",
    "./src/components/discord-embed-field/discord-embed-field.css?tag=discord-embed-field",
    "./src/components/discord-embed-field/discord-embed-field.tsx",
    "./src/components/discord-embed-fields/discord-embed-fields.css?tag=discord-embed-fields",
    "./src/components/discord-embed-fields/discord-embed-fields.tsx",
    "./src/components/discord-embed-footer/discord-embed-footer.css?tag=discord-embed-footer",
    "./src/components/discord-embed-footer/discord-embed-footer.tsx",
    "./src/components/discord-inline-code/discord-inline-code.tsx",
    "./src/components/svgs/guild-badge.tsx",
    "./src/components/svgs/partner-badge-overlay.tsx",
    "./src/components/svgs/verified-badge-overlay.tsx",
    "./src/components/discord-invite/discord-invite.css?tag=discord-invite",
    "./src/components/discord-invite/discord-invite.tsx",
    "./src/components/discord-italic/discord-italic.tsx",
    "../../node_modules/hex-to-rgba/build/index.js",
    "./src/components/svgs/channel-forum.tsx",
    "./src/components/svgs/channel-icon.tsx",
    "./src/components/svgs/channel-thread.tsx",
    "./src/components/svgs/locked-voice-channel.tsx",
    "./src/components/svgs/voice-channel.tsx",
    "./src/components/discord-mention/discord-mention.css?tag=discord-mention",
    "./src/components/discord-mention/discord-mention.tsx",
    "./src/components/svgs/verified-tick.tsx",
    "./src/components/author-info/author-info.tsx",
    "./src/components/svgs/ephemeral.tsx",
    "./src/components/discord-message/discord-message.css?tag=discord-message",
    "./src/components/discord-message/discord-message.tsx",
    "./src/components/discord-messages/discord-messages.css?tag=discord-messages",
    "./src/components/discord-messages/discord-messages.tsx",
    "./src/components/discord-quote/discord-quote.css?tag=discord-quote",
    "./src/components/discord-quote/discord-quote.tsx",
    "./src/components/discord-reaction/discord-reaction.css?tag=discord-reaction",
    "./src/components/discord-reaction/discord-reaction.tsx",
    "./src/components/discord-reactions/discord-reactions.css?tag=discord-reactions",
    "./src/components/discord-reactions/discord-reactions.tsx",
    "./src/components/svgs/attachment-reply.tsx",
    "./src/components/svgs/command-reply.tsx",
    "./src/components/svgs/reply-icon.tsx",
    "./src/components/discord-reply/discord-reply.css?tag=discord-reply",
    "./src/components/discord-reply/discord-reply.tsx",
    "./src/components/discord-spoiler/discord-spoiler.css?tag=discord-spoiler",
    "./src/components/discord-spoiler/discord-spoiler.tsx",
    "./src/components/svgs/boost.tsx",
    "./src/components/svgs/dm-call.tsx",
    "./src/components/svgs/dm-edit.tsx",
    "./src/components/svgs/dm-missed-call.tsx",
    "./src/components/svgs/pin.tsx",
    "./src/components/svgs/system-alert.tsx",
    "./src/components/svgs/system-error.tsx",
    "./src/components/svgs/thread.tsx",
    "./src/components/svgs/user-join.tsx",
    "./src/components/svgs/user-leave.tsx",
    "./src/components/discord-system-message/discord-system-message.css?tag=discord-system-message",
    "./src/components/discord-system-message/discord-system-message.tsx",
    "./src/components/discord-tenor-video/discord-tenor-video.css?tag=discord-tenor-video",
    "./src/components/discord-tenor-video/discord-tenor-video.tsx",
    "./src/components/discord-thread/discord-thread.css?tag=discord-thread",
    "./src/components/discord-thread/discord-thread.tsx",
    "./src/components/discord-thread-message/discord-thread-message.css?tag=discord-thread-message",
    "./src/components/discord-thread-message/discord-thread-message.tsx",
    "./src/components/discord-time/discord-time.css?tag=discord-time",
    "./src/components/discord-time/discord-time.tsx",
    "./src/components/discord-underlined/discord-underlined.tsx"
  ],
  "sourcesContent": [
    ".discord-action-row {\n\tdisplay: flex;\n\tflex-wrap: nowrap;\n}\n",
    "import { Component, ComponentInterface, h, Host } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-action-row',\n\tstyleUrl: 'discord-action-row.css'\n})\nexport class DiscordActionRow implements ComponentInterface {\n\tpublic render() {\n\t\treturn (\n\t\t\t<Host class=\"discord-action-row\">\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    "import type { Emoji } from './options';\n\nexport type DiscordTimestamp = Date | string | null;\n\nconst padZeroes = (value: string): string => {\n\tconst [month, day, year]: string[] = value.split('/');\n\treturn `${month.padStart(2, '0')}/${day.padStart(2, '0')}/${year}`;\n};\n\nconst formatDate = (value: DiscordTimestamp): string | null => {\n\tif (!(value instanceof Date)) return value;\n\treturn padZeroes(`${value.getMonth() + 1}/${value.getDate()}/${value.getFullYear()}`);\n};\n\nconst formatTime = (value: DiscordTimestamp, hour24 = false): string | null => {\n\tif (!(value instanceof Date)) return value;\n\tif (hour24) return `${value.getHours()}:${value.getMinutes().toString().padStart(2, '0')}`;\n\tconst hour = value.getHours() % 12 || 12;\n\tconst meridiem = value.getHours() < 12 ? 'AM' : 'PM';\n\treturn `${hour}:${value.getMinutes().toString().padStart(2, '0')} ${meridiem}`;\n};\n\nexport const handleTimestamp = (value: DiscordTimestamp, useTime = false, hour24 = false): string | null => {\n\tif (!(value instanceof Date) && typeof value !== 'string') {\n\t\tthrow new TypeError('Timestamp prop must be a Date object or a string.');\n\t}\n\n\treturn useTime ? formatTime(value, hour24) : formatDate(value);\n};\n\nexport const IMAGE_EXTENSION = /\\.(bmp|jpe?g|png|gif|webp|tiff)$/i;\n\nexport const validateImageExtension = (url: string) => {\n\tif (!IMAGE_EXTENSION.test(url)) throw new Error(`The url of an image for discord-attachment should match the regex ${IMAGE_EXTENSION}`);\n};\n\nexport const getGlobalEmojiUrl = (emojiName: string): Emoji | undefined => window.$discordMessage?.emojis?.[emojiName];\n",
    ".discord-attachment {\n\tcolor: #dcddde;\n\tdisplay: flex;\n\tfont-size: 13px;\n\tline-height: 150%;\n\tmargin-bottom: 8px;\n\tmargin-top: 8px;\n}\n\n.discord-attachment .discord-image-wrapper {\n\tdisplay: block;\n\tposition: relative;\n\t-webkit-user-select: text;\n\t-moz-user-select: text;\n\t-ms-user-select: text;\n\tuser-select: text;\n\toverflow: hidden;\n\tborder-radius: 3px;\n}\n",
    "import { Component, ComponentInterface, Element, h, Host, Prop } from '@stencil/core';\nimport { validateImageExtension } from '../../util';\n\n@Component({\n\ttag: 'discord-attachment',\n\tstyleUrl: 'discord-attachment.css'\n})\nexport class DiscordAttachment implements ComponentInterface {\n\t/**\n\t * The DiscordEmbed element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The URL for the image attachment\n\t * @important Should be a valid image URL, i.e. matching the regex `/\\.(bmp|jpe?g|png|gif|webp|tiff)$/i`\n\t */\n\t@Prop()\n\tpublic url: string;\n\n\t/**\n\t * The height of the image in pixels\n\t */\n\t@Prop()\n\tpublic height: number;\n\n\t/**\n\t * The width of the image in pixels\n\t */\n\t@Prop()\n\tpublic width: number;\n\n\t/**\n\t * The alt text to show in case the image was unable to load\n\t * @default 'discord attachment'\n\t */\n\t@Prop()\n\tpublic alt = 'discord attachment';\n\n\tpublic componentWillRender() {\n\t\tvalidateImageExtension(this.url);\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<Host class=\"discord-attachment\">\n\t\t\t\t<div class=\"discord-image-wrapper\" style={{ height: `${this.height}px`, width: `${this.width}px` }}>\n\t\t\t\t\t<img alt={this.alt} src={this.url} height={this.height} width={this.width} />\n\t\t\t\t</div>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    ".discord-message .discord-attachments {\n\tdisplay: grid;\n\tgrid-auto-flow: row;\n\tgrid-row-gap: 0.25rem;\n\ttext-indent: 0;\n\tmin-height: 0;\n\tmin-width: 0;\n\tpadding-top: 0.125rem;\n\tpadding-bottom: 0.125rem;\n\tposition: relative;\n}\n\n.discord-message .discord-attachments > * {\n\tjustify-self: start;\n\t-ms-flex-item-align: start;\n\talign-self: start;\n}\n",
    "import { Component, ComponentInterface, h, Host } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-attachments',\n\tstyleUrl: 'discord-attachments.css'\n})\nexport class DiscordAttachments implements ComponentInterface {\n\tpublic render() {\n\t\treturn (\n\t\t\t<Host class=\"discord-attachments\">\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    "import { Component, h } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-bold'\n})\nexport class DiscordBold {\n\tpublic render() {\n\t\treturn (\n\t\t\t<strong>\n\t\t\t\t<slot></slot>\n\t\t\t</strong>\n\t\t);\n\t}\n}\n",
    "import type { VNode } from '@stencil/core';\n\nexport default function Fragment<T>(_props: T, children: VNode[]) {\n\treturn [...children];\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function LaunchIcon<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M10 5V3H5.375C4.06519 3 3 4.06519 3 5.375V18.625C3 19.936 4.06519 21 5.375 21H18.625C19.936 21 21 19.936 21 18.625V14H19V19H5V5H10Z\"\n\t\t\t/>\n\t\t\t<path fill=\"currentColor\" d=\"M21 2.99902H14V4.99902H17.586L9.29297 13.292L10.707 14.706L19 6.41302V9.99902H21V2.99902Z\" />\n\t\t</svg>\n\t);\n}\n",
    ".discord-button {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tcursor: pointer;\n\tmargin: 4px 8px 4px 0;\n\tpadding: 2px 16px;\n\twidth: auto;\n\theight: 32px;\n\tmin-width: 60px;\n\tmin-height: 32px;\n\t-webkit-transition: background-color 0.17s ease, color 0.17s ease;\n\ttransition: background-color 0.17s ease, color 0.17s ease;\n\tborder-radius: 3px;\n\tfont-size: 14px;\n\tfont-weight: 500;\n\tline-height: 16px;\n\ttext-decoration: none !important;\n}\n\n.discord-button.discord-button-success {\n\tcolor: #fff;\n\tbackground-color: #3ba55d;\n}\n\n.discord-button.discord-button-success.discord-button-hoverable:hover {\n\tbackground-color: #2d7d46;\n}\n\n.discord-button.discord-button-destructive {\n\tcolor: #fff;\n\tbackground-color: #ed4245;\n}\n\n.discord-button.discord-button-destructive.discord-button-hoverable:hover {\n\tbackground-color: #c03537;\n}\n\n.discord-button.discord-button-primary {\n\tcolor: #fff;\n\tbackground-color: #5865f2;\n}\n\n.discord-button.discord-button-primary.discord-button-hoverable:hover {\n\tbackground-color: #4752c4;\n}\n\n.discord-button.discord-button-secondary {\n\tcolor: #fff;\n\tbackground-color: #4f545c;\n}\n\n.discord-button.discord-button-secondary.discord-button-hoverable:hover {\n\tbackground-color: #5d6269;\n}\n\n.discord-button.discord-button-disabled {\n\tcursor: not-allowed;\n\topacity: 0.5;\n}\n\n.discord-button .discord-button-launch {\n\tmargin-left: 8px;\n}\n\n.discord-button .discord-button-emoji {\n\tmargin-right: 4px;\n\tobject-fit: contain;\n\twidth: 1.375em;\n\theight: 1.375em;\n\tvertical-align: bottom;\n}\n",
    "import { Component, ComponentInterface, Element, h, Host, Prop, Watch } from '@stencil/core';\nimport Fragment from '../../Fragment';\nimport LaunchIcon from '../svgs/launch-icon';\n\n@Component({\n\ttag: 'discord-button',\n\tstyleUrl: 'discord-button.css'\n})\nexport class DiscordButton implements ComponentInterface {\n\t/**\n\t * The DiscordButton element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The emoji URL to use in the button.\n\t */\n\t@Prop()\n\tpublic emoji: string;\n\n\t/**\n\t * The name of the emoji used in the button.\n\t */\n\t@Prop()\n\tpublic emojiName = 'emoji';\n\n\t/**\n\t * The URL for the button. Setting this will force the button type to be `secondary`.\n\t */\n\t@Prop()\n\tpublic url: string;\n\n\t/**\n\t * Whether to show the button as disabled.\n\t */\n\t@Prop()\n\tpublic disabled = false;\n\n\t/**\n\t * The type of button this is, this will change the color of the button.\n\t * Valid values: `primary`, `secondary`, `success`, `destructive`.\n\t */\n\t@Prop()\n\tpublic type: 'primary' | 'secondary' | 'success' | 'destructive' = 'secondary';\n\n\t@Watch('type')\n\tpublic handleType(value: string) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow new TypeError('DiscordButton `type` prop must be a string.');\n\t\t} else if (!['primary', 'secondary', 'success', 'destructive'].includes(value)) {\n\t\t\tthrow new RangeError(\"DiscordButton `type` prop must be one of: 'primary', 'secondary', 'success', 'destructive'\");\n\t\t}\n\t}\n\n\tpublic render() {\n\t\tconst parent: HTMLDiscordActionRowElement = this.el.parentElement as HTMLDiscordActionRowElement;\n\n\t\tif (parent.tagName.toLowerCase() !== 'discord-action-row') {\n\t\t\tthrow new Error('All <discord-button> components must be direct children of <discord-action-row>.');\n\t\t}\n\n\t\tconst content = (\n\t\t\t<Fragment>\n\t\t\t\t{this.emoji && <img src={this.emoji} alt={this.emojiName} draggable={false} class=\"discord-button-emoji\" />}\n\t\t\t\t<span>\n\t\t\t\t\t<slot />\n\t\t\t\t</span>\n\t\t\t\t{this.url && <LaunchIcon class=\"discord-button-launch\" />}\n\t\t\t</Fragment>\n\t\t);\n\n\t\treturn this.url && !this.disabled ? (\n\t\t\t<a class=\"discord-button discord-button-secondary\" href={this.url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t{content}\n\t\t\t</a>\n\t\t) : (\n\t\t\t<Host class={`discord-button discord-button-${this.type} discord-button-${this.disabled ? 'disabled' : 'hoverable'}`}>{content}</Host>\n\t\t);\n\t}\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function CommandIcon<T>(props: T) {\n\treturn (\n\t\t<svg {...props} width=\"6\" height=\"10\" viewBox=\"0 0 6 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path d=\"M4.61241 0L6 0.845294L1.38759 10L0 9.15471L4.61241 0Z\" fill=\"currentColor\" />\n\t\t</svg>\n\t);\n}\n",
    ".discord-replied-message.discord-executed-command .discord-command-name {\n\tcolor: #00aff4;\n\tfont-weight: 500;\n}\n\n.discord-replied-message.discord-executed-command .discord-command-name:hover {\n\tcolor: #00aff4;\n\ttext-decoration: underline;\n}\n\n.discord-replied-message.discord-executed-command .discord-replied-message-username {\n\tmargin-right: 0;\n}\n\n@import '../discord-reply/discord-reply.css';\n",
    "import { Component, ComponentInterface, Element, h, Host, Prop } from '@stencil/core';\nimport { avatars, Profile, profiles } from '../../options';\nimport CommandIcon from '../svgs/command-icon';\n\n@Component({\n\ttag: 'discord-command',\n\tstyleUrl: 'discord-command.css'\n})\nexport class DiscordCommand implements ComponentInterface {\n\t/**\n\t * The DiscordCommand element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The id of the profile data to use.\n\t */\n\t@Prop()\n\tpublic profile: string;\n\n\t/**\n\t * The message author's username.\n\t * @default 'User'\n\t */\n\t@Prop()\n\tpublic author = 'User';\n\n\t/**\n\t * The message author's avatar. Can be an avatar shortcut, relative path, or external link.\n\t */\n\t@Prop()\n\tpublic avatar: string;\n\n\t/**\n\t * The message author's primary role color. Can be any [CSS color value](https://www.w3schools.com/cssref/css_colors_legal.asp).\n\t */\n\t@Prop()\n\tpublic roleColor: string;\n\n\t/**\n\t * The name of the command invoked.\n\t */\n\t@Prop()\n\tpublic command: string;\n\n\tpublic render() {\n\t\tconst parent: HTMLDiscordMessageElement = this.el.parentElement as HTMLDiscordMessageElement;\n\n\t\tif (parent.tagName.toLowerCase() !== 'discord-message') {\n\t\t\tthrow new Error('All <discord-command> components must be direct children of <discord-message>.');\n\t\t}\n\n\t\tconst resolveAvatar = (avatar: string): string => avatars[avatar] ?? avatar ?? avatars.default;\n\n\t\tconst defaultData: Profile = { author: this.author, bot: false, verified: false, server: false, roleColor: this.roleColor };\n\t\tconst profileData: Profile = Reflect.get(profiles, this.profile) ?? {};\n\t\tconst profile: Profile = { ...defaultData, ...profileData, ...{ avatar: resolveAvatar(profileData.avatar ?? this.avatar) } };\n\n\t\tconst messageParent: HTMLDiscordMessagesElement = parent.parentElement as HTMLDiscordMessagesElement;\n\n\t\treturn (\n\t\t\t<Host class=\"discord-replied-message discord-executed-command\">\n\t\t\t\t{messageParent.compactMode ? (\n\t\t\t\t\t<div class=\"discord-reply-badge\">\n\t\t\t\t\t\t<CommandIcon />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<img class=\"discord-replied-message-avatar\" src={profile.avatar} alt={profile.author} />\n\t\t\t\t)}\n\t\t\t\t<span class=\"discord-replied-message-username\" style={{ color: profile.roleColor ?? '' }}>\n\t\t\t\t\t{profile.author}\n\t\t\t\t</span>\n\t\t\t\t{' used '}\n\t\t\t\t<div class=\"discord-replied-message-content discord-command-name\">{this.command}</div>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    ".discord-custom-emoji {\n\tdisplay: inline-block;\n\tcursor: pointer;\n}\n.discord-custom-emoji .discord-custom-emoji-image {\n\tobject-fit: contain;\n\twidth: 1.375rem;\n\theight: 1.375rem;\n\tvertical-align: bottom;\n}\n\n.discord-embed-custom-emoji {\n\tdisplay: inline-block;\n}\n\n.discord-embed-custom-emoji .discord-embed-custom-emoji-image {\n\twidth: 18px;\n\theight: 18px;\n\tvertical-align: bottom;\n}\n",
    "import { Component, ComponentInterface, Element, h, Prop } from '@stencil/core';\nimport { getGlobalEmojiUrl } from '../../util';\n\n@Component({\n\ttag: 'discord-custom-emoji',\n\tstyleUrl: 'discord-custom-emoji.css'\n})\nexport class DiscordCustomEmoji implements ComponentInterface {\n\t/**\n\t * The DiscordReaction element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The name of the emoji\n\t */\n\t@Prop()\n\tpublic name: string;\n\n\t/**\n\t * The emoji URL to use in the message.\n\t */\n\t@Prop({ mutable: true })\n\tpublic url: string;\n\n\t/**\n\t * Determines whether or not the emoji is used in an embed, or a message.\n\t * If it is used in an embed, the sizing is adjusted accordingly.\n\t */\n\t@Prop({ mutable: true })\n\tpublic embedEmoji: boolean;\n\n\tpublic componentWillRender() {\n\t\tif (!this.url && Boolean(this.name)) {\n\t\t\tconst emojiFromGlobal = getGlobalEmojiUrl(this.name);\n\n\t\t\tif (emojiFromGlobal) {\n\t\t\t\tthis.url ??= emojiFromGlobal.url ?? '';\n\t\t\t\tthis.embedEmoji ??= emojiFromGlobal.embedEmoji ?? false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic render() {\n\t\tconst name = `:${this.name}:`;\n\t\tconst emojiClassName = this.embedEmoji ? 'discord-embed-custom-emoji' : 'discord-custom-emoji';\n\t\tconst emojiImageClassName = this.embedEmoji ? 'discord-embed-custom-emoji-image' : 'discord-custom-emoji-image';\n\n\t\treturn (\n\t\t\t<span class={emojiClassName}>\n\t\t\t\t<img aria-label={name} src={this.url} alt={name} draggable={false} class={emojiImageClassName} />\n\t\t\t</span>\n\t\t);\n\t}\n}\n",
    "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;",
    ".discord-embed {\n\tcolor: #dcddde;\n\tdisplay: flex;\n\tfont-size: 13px;\n\tline-height: 150%;\n\tmargin-bottom: 8px;\n\tmargin-top: 8px;\n}\n\n.discord-light-theme .discord-embed {\n\tcolor: #2e3338;\n}\n\n.discord-embed .discord-left-border {\n\tbackground-color: #202225;\n\tborder-radius: 4px 0 0 4px;\n\tflex-shrink: 0;\n\twidth: 4px;\n}\n\n.discord-light-theme .discord-embed .discord-left-border {\n\tbackground-color: #e3e5e8;\n}\n\n.discord-embed .discord-embed-root {\n\tdisplay: grid;\n\tgrid-auto-flow: row;\n\tgrid-row-gap: 0.25rem;\n\tmin-height: 0;\n\tmin-width: 0;\n\ttext-indent: 0;\n}\n\n.discord-embed .discord-embed-wrapper {\n\tbackground-color: #2f3136;\n\tmax-width: 520px;\n\tborder: 1px solid rgba(46, 48, 54, 0.6);\n\tborder-radius: 0 4px 4px 0;\n\tjustify-self: start;\n\talign-self: start;\n\tdisplay: grid;\n\tbox-sizing: border-box;\n}\n\n.discord-light-theme .discord-embed .discord-embed-wrapper {\n\tbackground-color: rgba(249, 249, 249, 0.3);\n\tborder-color: rgba(205, 205, 205, 0.3);\n}\n\n.discord-embed .discord-embed-wrapper .discord-embed-grid {\n\tdisplay: inline-grid;\n\tgrid-template-columns: auto -webkit-min-content;\n\tgrid-template-columns: auto min-content;\n\tgrid-template-columns: auto;\n\tgrid-template-rows: auto;\n\tpadding: 0.5rem 1rem 1rem 0.75rem;\n}\n\n.discord-embed .discord-embed-thumbnail {\n\tborder-radius: 4px;\n\tflex-shrink: 0;\n\tgrid-column: 2/2;\n\tgrid-row: 1/8;\n\tjustify-self: end;\n\tmargin-left: 16px;\n\tmargin-top: 8px;\n\tmax-height: 80px;\n\tmax-width: 80px;\n\tobject-fit: contain;\n\tobject-position: top center;\n}\n\n.discord-embed .discord-embed-author {\n\t-webkit-box-align: center;\n\talign-items: center;\n\tcolor: #fff;\n\tfont-size: 14px;\n\tdisplay: flex;\n\tfont-weight: 600;\n\tgrid-column: 1 / 1;\n\tmargin-top: 8px;\n\tmin-width: 0;\n}\n\n.discord-light-theme .discord-embed .discord-embed-author {\n\tcolor: #4f545c;\n}\n\n.discord-embed .discord-embed-author a {\n\tcolor: #fff;\n\tfont-weight: 600;\n}\n\n.discord-light-theme .discord-embed .discord-embed-author a {\n\tcolor: #4f545c;\n}\n\n.discord-embed .discord-embed-author .discord-author-image {\n\tborder-radius: 50%;\n\theight: 24px;\n\tmargin-right: 8px;\n\twidth: 24px;\n}\n\n.discord-embed .discord-embed-provider {\n\tfont-size: 0.75rem;\n\tline-height: 1rem;\n\tfont-weight: 400;\n\tgrid-column: 1/1;\n\tmargin-top: 8px;\n\tunicode-bidi: plaintext;\n\ttext-align: left;\n}\n\n.discord-light-theme .discord-embed .discord-embed-provider {\n\tcolor: #4f545c;\n}\n\n.discord-embed .discord-embed-title {\n\t-webkit-box-align: center;\n\talign-items: center;\n\tcolor: #fff;\n\tdisplay: inline-block;\n\tfont-size: 1rem;\n\tfont-weight: 600;\n\tgrid-column: 1 / 1;\n\tmargin-top: 8px;\n\tmin-width: 0;\n}\n\n.discord-embed .discord-embed-title a {\n\tcolor: #00aff4;\n\tfont-weight: 600;\n}\n\n.discord-embed .discord-embed-image {\n\tborder-radius: 4px;\n\tmax-width: 100%;\n}\n\n.discord-embed .discord-embed-media {\n\tborder-radius: 4px;\n\tcontain: paint;\n\tdisplay: block;\n\tgrid-column: 1/1;\n\tmargin-top: 16px;\n}\n\n.discord-embed .discord-embed-media.discord-embed-media-video {\n\theight: 225px;\n}\n\n.discord-embed .discord-embed.media .discord-embed-image {\n\toverflow: hidden;\n\tposition: relative;\n\tuser-select: text;\n}\n\n.discord-embed .discord-embed-media .discord-embed-video {\n\t-webkit-box-align: center;\n\t-webkit-box-pack: center;\n\talign-items: center;\n\tborder-radius: 0;\n\tcursor: pointer;\n\tdisplay: flex;\n\theight: 100%;\n\tjustify-content: center;\n\tmax-height: 100%;\n\twidth: 100%;\n\n\twidth: 400px;\n\theight: 225px;\n\tleft: 0px;\n\ttop: 0px;\n}\n\n.discord-embed-custom-emoji {\n\tdisplay: inline-block;\n}\n\n.discord-embed-custom-emoji .discord-embed-custom-emoji-image {\n\twidth: 18px;\n\theight: 18px;\n\tvertical-align: bottom;\n}\n",
    "import { Component, ComponentInterface, Element, h, Prop, State } from '@stencil/core';\nimport clsx from 'clsx';\nimport Fragment from '../../Fragment';\nimport type { Emoji } from '../../options';\nimport { getGlobalEmojiUrl } from '../../util';\n\n@Component({\n\ttag: 'discord-embed',\n\tstyleUrl: 'discord-embed.css'\n})\nexport class DiscordEmbed implements ComponentInterface {\n\t/**\n\t * The DiscordEmbed element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The color to use for the embed's left border. Can be any [CSS color value](https://www.w3schools.com/cssref/css_colors_legal.asp).\n\t */\n\t@Prop()\n\tpublic color: string;\n\n\t/**\n\t * The author's name.\n\t */\n\t@Prop()\n\tpublic authorName: string;\n\n\t/**\n\t * The author's avatar URL.\n\t */\n\t@Prop()\n\tpublic authorImage: string;\n\n\t/**\n\t * The URL to open when you click on the author's name.\n\t */\n\t@Prop()\n\tpublic authorUrl: string;\n\n\t/**\n\t * The embed title.\n\t */\n\t@Prop()\n\tpublic embedTitle: string;\n\n\t/**\n\t * The URL to open when you click on the embed title.\n\t */\n\t@Prop()\n\tpublic url: string;\n\n\t/**\n\t * The thumbnail image to use.\n\t */\n\t@Prop()\n\tpublic thumbnail: string;\n\n\t/**\n\t * The embed image to use (displayed at the bottom).\n\t */\n\t@Prop()\n\tpublic image: string;\n\n\t/**\n\t * The embed video to use (displayed at the bottom, same slot as the image).\n\t * @important YouTube videos will not be playable on your projects, this is due to YouTube using DASH to play their videos rather\n\t * than providing the raw media stream (in a container such as mp4 or ogg). Links to regular MP4 files (such as on a CDN) however\n\t * will autoplay!\n\t * @note Video takes priority over image.\n\t * @remark Providing both a video and an image will ensure the image is shown to users with browsers\n\t * that do not support HTML5 video playback.\n\t * @example https://download.blender.org/peach/bigbuckbunny_movies/big_buck_bunny_1080p_stereo.ogg\n\t */\n\t@Prop()\n\tpublic video: string;\n\n\t/**\n\t * The provider to show above the embed, for example for YouTube videos it will show \"YouTube\" at the top of the embed (above the author)\n\t * @example YouTube\n\t */\n\t@Prop()\n\tpublic provider: string;\n\n\tprivate hasPerformedRerenderChecks: 'dirty' | 'pristine' = 'pristine';\n\n\t@State()\n\tprivate hasProvidedDescriptionSlot = true;\n\n\tpublic componentDidRender() {\n\t\tif (this.hasPerformedRerenderChecks === 'pristine') {\n\t\t\ttry {\n\t\t\t\tconst discordEmbedDescriptionChild = this.el.querySelector('.discord-embed-description');\n\t\t\t\tthis.hasProvidedDescriptionSlot = Boolean(discordEmbedDescriptionChild?.innerHTML.trim());\n\t\t\t} finally {\n\t\t\t\tthis.hasPerformedRerenderChecks = 'dirty';\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic render() {\n\t\tconst emojiParsedAuthorName = this.parseTitle(this.authorName);\n\t\tconst emojiParsedEmbedTitle = this.parseTitle(this.embedTitle);\n\n\t\treturn (\n\t\t\t<div class=\"discord-embed\">\n\t\t\t\t<div style={{ 'background-color': this.color }} class=\"discord-left-border\"></div>\n\t\t\t\t<div class=\"discord-embed-root\">\n\t\t\t\t\t<div class=\"discord-embed-wrapper\">\n\t\t\t\t\t\t<div class=\"discord-embed-grid\">\n\t\t\t\t\t\t\t{this.provider && (\n\t\t\t\t\t\t\t\t<div class=\"discord-embed-provider\">\n\t\t\t\t\t\t\t\t\t<Fragment>{this.provider}</Fragment>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{emojiParsedAuthorName && (\n\t\t\t\t\t\t\t\t<div class=\"discord-embed-author\">\n\t\t\t\t\t\t\t\t\t{this.authorImage ? <img src={this.authorImage} alt=\"\" class=\"discord-author-image\" /> : ''}\n\t\t\t\t\t\t\t\t\t{this.authorUrl ? (\n\t\t\t\t\t\t\t\t\t\t<a href={this.authorUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t{...emojiParsedAuthorName}\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Fragment>{...emojiParsedAuthorName}</Fragment>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{emojiParsedEmbedTitle && (\n\t\t\t\t\t\t\t\t<div class=\"discord-embed-title\">\n\t\t\t\t\t\t\t\t\t{this.url ? (\n\t\t\t\t\t\t\t\t\t\t<a href={this.url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t{...emojiParsedEmbedTitle}\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Fragment>{...emojiParsedEmbedTitle}</Fragment>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{this.hasProvidedDescriptionSlot && <slot name=\"description\"></slot>}\n\n\t\t\t\t\t\t\t<slot name=\"fields\"></slot>\n\t\t\t\t\t\t\t{this.image || this.video ? (\n\t\t\t\t\t\t\t\t<div class={clsx('discord-embed-media', { 'discord-embed-media-video': Boolean(this.video) })}>\n\t\t\t\t\t\t\t\t\t{this.renderMedia()}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\n\t\t\t\t\t\t\t{this.thumbnail ? <img src={this.thumbnail} alt=\"\" class=\"discord-embed-thumbnail\" /> : ''}\n\t\t\t\t\t\t\t<slot name=\"footer\"></slot>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate renderMedia() {\n\t\tif (this.video) {\n\t\t\treturn (\n\t\t\t\t<video controls muted preload=\"none\" poster={this.image} src={this.video} height=\"225\" width=\"400\" class=\"discord-embed-video\">\n\t\t\t\t\t<img src={this.image} alt=\"Discord embed media\" class=\"discord-embed-image\" />\n\t\t\t\t</video>\n\t\t\t);\n\t\t} else if (this.image) {\n\t\t\treturn <img src={this.image} alt=\"Discord embed media\" class=\"discord-embed-image\" />;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate parseTitle(title?: string) {\n\t\tif (!title) return null;\n\n\t\tconst words = title.split(' ');\n\n\t\treturn words.map((word: string, idx: number) => {\n\t\t\tconst emoji = getGlobalEmojiUrl(word) ?? ({} as Emoji);\n\t\t\tlet el = '';\n\t\t\tif (emoji.name) {\n\t\t\t\tel = (\n\t\t\t\t\t<span class=\"discord-embed-custom-emoji\">\n\t\t\t\t\t\t<img src={emoji.url} alt={emoji.name} class=\"discord-embed-custom-emoji-image\" />\n\t\t\t\t\t\t<span>&nbsp;</span>\n\t\t\t\t\t</span>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tel = idx < words.length - 1 ? `${word} ` : word;\n\t\t\t}\n\t\t\treturn el;\n\t\t});\n\t}\n}\n",
    ".discord-embed .discord-embed-description {\n\tfont-size: 0.875rem;\n\tfont-weight: 400;\n\tgrid-column: 1/1;\n\tline-height: 1.125rem;\n\tmargin-top: 8px;\n\tmin-width: 0;\n\twhite-space: pre-line;\n}\n\n.discord-embed .discord-embed-description code {\n\tbackground-color: #202225;\n\tpadding: 2.5px;\n\tborder-radius: 3px;\n}\n\n.discord-light-theme .discord-embed-description code {\n\tbackground-color: #e3e5e8;\n}\n\n.discord-embed .discord-embed-description code.multiline {\n\tdisplay: block;\n\tpadding: 7px;\n\tborder-radius: 4px;\n\twhite-space: break-spaces;\n}\n\n.discord-embed .discord-embed-description pre {\n\tmargin: 0;\n\tmargin-top: 6px;\n}\n\n.discord-embed .discord-embed-description img.emoji {\n\twidth: 22px;\n\theight: 22px;\n}\n\n.discord-embed .discord-embed-description blockquote {\n\tposition: relative;\n\tpadding: 0 8px 0 12px;\n\tmargin: 0;\n}\n\n.discord-embed .discord-embed-description blockquote::before {\n\tcontent: '';\n\tdisplay: block;\n\tposition: absolute;\n\tleft: 0;\n\theight: 100%;\n\twidth: 4px;\n\tborder-radius: 4px;\n\tbackground-color: #4f545c;\n}\n\n.discord-light-theme .discord-embed-description blockquote::before {\n\tbackground-color: #c7ccd1;\n}\n\n.discord-embed .discord-embed-description .spoiler {\n\tbackground-color: #202225;\n\tcolor: transparent;\n\tcursor: pointer;\n}\n\n.discord-light-theme .discord-embed .discord-embed-description .spoiler {\n\tbackground-color: #b9bbbe;\n}\n\n.discord-embed .discord-embed-description .spoiler:hover {\n\tbackground-color: rgba(32, 34, 37, 0.8);\n}\n\n.discord-light-theme .discord-embed .discord-embed-description .spoiler:hover {\n\tbackground-color: rgba(185, 187, 190, 0.8);\n}\n\n.discord-embed .discord-embed-description .spoiler:active {\n\tcolor: inherit;\n\tbackground-color: hsla(0, 0%, 100%, 0.1);\n}\n\n.discord-light-theme .discord-embed .discord-embed-description .spoiler:active {\n\tbackground-color: rgba(0, 0, 0, 0.1);\n}\n",
    "import { Component, ComponentInterface, Element, h, Host } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-embed-description',\n\tstyleUrl: 'discord-embed-description.css'\n})\nexport class DiscordEmbedDescription implements ComponentInterface {\n\t/**\n\t * The DiscordEmbedDescription element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\tpublic render() {\n\t\tconst parent: HTMLDiscordMessagesElement = this.el.parentElement as HTMLDiscordMessagesElement;\n\n\t\tif (parent.tagName.toLowerCase() !== 'div') {\n\t\t\tthrow new Error('All <discord-embed-description> components must be direct children of <discord-embed>.');\n\t\t}\n\n\t\treturn (\n\t\t\t<Host class=\"discord-embed-description\">\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    ".discord-embed .discord-embed-field {\n\tfont-size: 0.875rem;\n\tline-height: 1.125rem;\n\tmin-width: 0;\n\tfont-weight: 400;\n\tgrid-column: 1/13;\n}\n\n.discord-embed .discord-embed-field .discord-field-title {\n\tcolor: #ffffff;\n\tfont-weight: 600;\n\tfont-size: 0.875rem;\n\tline-height: 1.125rem;\n\tmin-width: 0;\n\tmargin-bottom: 2px;\n}\n\n.discord-embed .discord-embed-field.discord-inline-field {\n\tflex-grow: 1;\n\tflex-basis: auto;\n\tmin-width: 150px;\n}\n\n.discord-light-theme .discord-embed .discord-embed-field .discord-field-title {\n\tcolor: #747f8d;\n}\n\n.discord-embed-inline-field-3 {\n\tgrid-column: 9/13 !important;\n}\n\n.discord-embed-inline-field-2 {\n\tgrid-column: 5/9 !important;\n}\n\n.discord-embed-inline-field-1 {\n\tgrid-column: 1/5 !important;\n}\n",
    "import { Component, ComponentInterface, Element, h, Host, Prop, Watch } from '@stencil/core';\nimport clsx from 'clsx';\nimport type { Emoji } from '../../options';\nimport { getGlobalEmojiUrl } from '../../util';\n\n@Component({\n\ttag: 'discord-embed-field',\n\tstyleUrl: 'discord-embed-field.css'\n})\nexport class DiscordEmbedField implements ComponentInterface {\n\t/**\n\t * The DiscordEmbedField element\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The field's title.\n\t */\n\t@Prop()\n\tpublic fieldTitle!: string;\n\n\t/**\n\t * Whether this field should be displayed inline or not.\n\t */\n\t@Prop()\n\tpublic inline = false;\n\n\t/**\n\t * The index of this inline field\n\t * @remark This defines the position of this inline field. 1 is left, 2 is middle and 3 is right.\n\t * @oneof [1, 2, 3]\n\t * @default 1\n\t */\n\t@Prop()\n\tpublic inlineIndex = 1;\n\n\tprivate validInlineIndices = new Set([1, 2, 3]);\n\n\t@Watch('inlineIndex')\n\tpublic checkInlineIndex(value: DiscordEmbedField['inlineIndex']) {\n\t\tif (!this.validInlineIndices.has(Number(value))) throw new RangeError('DiscordEmbedField `inlineIndex` prop must be one of: 1, 2, or 3');\n\t}\n\n\tpublic componentWillRender() {\n\t\tthis.checkInlineIndex(this.inlineIndex);\n\t}\n\n\tpublic render() {\n\t\tconst parent: HTMLDiscordEmbedFieldElement = this.el.parentElement as HTMLDiscordEmbedFieldElement;\n\n\t\tif (parent.tagName.toLowerCase() !== 'discord-embed-fields') {\n\t\t\tthrow new SyntaxError('All <discord-embed-field> components must be direct children of <discord-embed-fields>.');\n\t\t}\n\n\t\tconst emojiParsedEmbedFieldTitle = this.parseTitle(this.fieldTitle);\n\n\t\treturn (\n\t\t\t<Host\n\t\t\t\tclass={clsx(\n\t\t\t\t\t{\n\t\t\t\t\t\t'discord-embed-inline-field': this.inline,\n\t\t\t\t\t\t'discord-embed-inline-field-1': this.inline && this.inlineIndex === 1,\n\t\t\t\t\t\t'discord-embed-inline-field-2': this.inline && this.inlineIndex === 2,\n\t\t\t\t\t\t'discord-embed-inline-field-3': this.inline && this.inlineIndex === 3\n\t\t\t\t\t},\n\t\t\t\t\t'discord-embed-field'\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{emojiParsedEmbedFieldTitle && <div class=\"discord-field-title\">{[...emojiParsedEmbedFieldTitle]}</div>}\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t);\n\t}\n\n\tprivate parseTitle(title?: string) {\n\t\tif (!title) return null;\n\n\t\tconst words = title.split(' ');\n\n\t\treturn words.map((word: string, idx: number) => {\n\t\t\tconst emoji = getGlobalEmojiUrl(word) ?? ({} as Emoji);\n\t\t\tlet el = '';\n\t\t\tif (emoji.name) {\n\t\t\t\tel = (\n\t\t\t\t\t<span class=\"discord-embed-custom-emoji\">\n\t\t\t\t\t\t<img src={emoji.url} alt={emoji.name} class=\"discord-embed-custom-emoji-image\" />\n\t\t\t\t\t\t<span>&nbsp;</span>\n\t\t\t\t\t</span>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tel = idx < words.length - 1 ? `${word} ` : word;\n\t\t\t}\n\t\t\treturn el;\n\t\t});\n\t}\n}\n",
    ".discord-embed .discord-embed-fields {\n\tdisplay: grid;\n\tgrid-column: 1/1;\n\tmargin-top: 8px;\n\tgrid-gap: 8px;\n}\n",
    "import { Component, ComponentInterface, h, Host } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-embed-fields',\n\tstyleUrl: 'discord-embed-fields.css'\n})\nexport class DiscordEmbedFields implements ComponentInterface {\n\tpublic render() {\n\t\treturn (\n\t\t\t<Host class=\"discord-embed-fields\">\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    ".discord-embed-footer {\n\t-webkit-box-align: center;\n\talign-items: center;\n\tcolor: #dcddde;\n\tdisplay: flex;\n\tfont-size: 12px;\n\tline-height: 16px;\n\tfont-weight: 500;\n\tgrid-column: 1/3;\n\tgrid-row: auto/auto;\n\tmargin-top: 8px;\n}\n\n.discord-embed-footer .discord-footer-image {\n\tborder-radius: 50%;\n\tflex-shrink: 0;\n\theight: 20px;\n\tmargin-right: 8px;\n\twidth: 20px;\n}\n\n.discord-embed-footer .discord-footer-separator {\n\tcolor: #dcddde;\n\tfont-weight: 500;\n\tdisplay: inline-block;\n\tmargin: 0 4px;\n}\n\n.discord-light-theme .discord-embed-footer .discord-footer-separator {\n\tcolor: #e4e4e4;\n}\n",
    "import { Component, ComponentInterface, Element, h, Host, Prop, Watch } from '@stencil/core';\nimport Fragment from '../../Fragment';\nimport { DiscordTimestamp, handleTimestamp } from '../../util';\n\n@Component({\n\ttag: 'discord-embed-footer',\n\tstyleUrl: 'discord-embed-footer.css'\n})\nexport class DiscordEmbedFooter implements ComponentInterface {\n\t/**\n\t * The DiscordEmbedFooter element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The image to use next to the footer text.\n\t */\n\t@Prop()\n\tpublic footerImage: string;\n\n\t/**\n\t * The timestamp to use for the message date. When supplying a string, the format must be `01/31/2000`.\n\t */\n\t@Prop({ mutable: true, reflect: true })\n\tpublic timestamp?: DiscordTimestamp;\n\n\t@Watch('timestamp')\n\tpublic updateTimestamp(value?: DiscordTimestamp): string | null {\n\t\tif (!value || isNaN(new Date(value).getTime())) return null;\n\t\treturn handleTimestamp(new Date(value));\n\t}\n\n\tpublic componentWillRender() {\n\t\tthis.timestamp = this.updateTimestamp(this.timestamp);\n\t}\n\n\tpublic render() {\n\t\tconst parent: HTMLDiscordMessagesElement = this.el.parentElement as HTMLDiscordMessagesElement;\n\n\t\tif (parent.tagName.toLowerCase() !== 'div') {\n\t\t\tthrow new Error('All <discord-embed-footer> components must be direct children of <discord-embed>.');\n\t\t}\n\n\t\treturn (\n\t\t\t<Host class=\"discord-embed-footer\">\n\t\t\t\t{this.footerImage ? <img src={this.footerImage} alt=\"\" class=\"discord-footer-image\" /> : ''}\n\t\t\t\t<Fragment>\n\t\t\t\t\t<slot></slot>\n\t\t\t\t\t{this.timestamp ? <span class=\"discord-footer-separator\">&bull;</span> : ''}\n\t\t\t\t\t{this.timestamp ? <Fragment>{this.timestamp}</Fragment> : ''}\n\t\t\t\t</Fragment>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    "import { Component, h } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-inline-code'\n})\nexport class DiscordInlineCode {\n\tpublic render() {\n\t\treturn (\n\t\t\t<code>\n\t\t\t\t<slot></slot>\n\t\t\t</code>\n\t\t);\n\t}\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function GuildBadge<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"16\" height=\"16\" viewBox=\"0 0 16 15.2\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\td=\"m16 7.6c0 .79-1.28 1.38-1.52 2.09s.44 2 0 2.59-1.84.35-2.46.8-.79 1.84-1.54 2.09-1.67-.8-2.47-.8-1.75 1-2.47.8-.92-1.64-1.54-2.09-2-.18-2.46-.8.23-1.84 0-2.59-1.54-1.3-1.54-2.09 1.28-1.38 1.52-2.09-.44-2 0-2.59 1.85-.35 2.48-.8.78-1.84 1.53-2.12 1.67.83 2.47.83 1.75-1 2.47-.8.91 1.64 1.53 2.09 2 .18 2.46.8-.23 1.84 0 2.59 1.54 1.3 1.54 2.09z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nconst PartnerBadgeOverlay = () => (\n\t<svg aria-hidden=\"false\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n\t\t<path\n\t\t\td=\"M10.5906 6.39993L9.19223 7.29993C8.99246 7.39993 8.89258 7.39993 8.69281 7.29993C8.59293 7.19993 8.39317 7.09993 8.29328 6.99993C7.89375 6.89993 7.5941 6.99993 7.29445 7.19993L6.79504 7.49993L4.29797 9.19993C3.69867 9.49993 2.99949 9.39993 2.69984 8.79993C2.30031 8.29993 2.50008 7.59993 2.99949 7.19993L5.99598 5.19993C6.79504 4.69993 7.79387 4.49993 8.69281 4.69993C9.49188 4.89993 10.0912 5.29993 10.5906 5.89993C10.7904 6.09993 10.6905 6.29993 10.5906 6.39993Z\"\n\t\t\tfill=\"currentColor\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M13.4871 7.79985C13.4871 8.19985 13.2874 8.59985 12.9877 8.79985L9.89135 10.7999C9.29206 11.1999 8.69276 11.3999 7.99358 11.3999C7.69393 11.3999 7.49417 11.3999 7.19452 11.2999C6.39545 11.0999 5.79616 10.6999 5.29674 10.0999C5.19686 9.89985 5.29674 9.69985 5.39663 9.59985L6.79499 8.69985C6.89487 8.59985 7.09463 8.59985 7.19452 8.69985C7.39428 8.79985 7.59405 8.89985 7.69393 8.99985C8.09346 8.99985 8.39311 8.99985 8.69276 8.79985L9.39194 8.39985L11.3896 6.99985L11.6892 6.79985C12.1887 6.49985 12.9877 6.59985 13.2874 7.09985C13.4871 7.39985 13.4871 7.59985 13.4871 7.79985Z\"\n\t\t\tfill=\"currentColor\"\n\t\t/>\n\t</svg>\n);\n\nexport default PartnerBadgeOverlay;\n",
    "import { h } from '@stencil/core';\n\nconst VerifiedBadgeOverlay = () => (\n\t<svg aria-hidden=\"false\" width=\"16\" height=\"16\" viewBox=\"0 0 16 15.2\">\n\t\t<path d=\"M7.4,11.17,4,8.62,5,7.26l2,1.53L10.64,4l1.36,1Z\" fill=\"currentColor\" />\n\t</svg>\n);\n\nexport default VerifiedBadgeOverlay;\n",
    ".discord-invite {\n\tbackground-color: #2f3136;\n\tborder-radius: 4px;\n\tpadding: 16px;\n\twidth: 432px;\n}\n\n.discord-light-theme .discord-invite {\n\tbackground-color: #f2f3f5;\n}\n\n.discord-invite .discord-invite-header {\n\tfont-weight: 700;\n\tfont-size: 12px;\n\tline-height: 16px;\n\tmargin-bottom: 12px;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\ttext-transform: uppercase;\n\tcolor: #b9bbbe;\n}\n\n.discord-light-theme .discord-invite .discord-invite-header {\n\tcolor: #4f5660;\n}\n\n.discord-invite .discord-invite-root {\n\tdisplay: flex;\n\tflex-flow: row nowrap;\n}\n\n.discord-invite .discord-invite-icon {\n\tbackground-color: #36393f;\n\tborder-radius: 15px;\n\tmargin-right: 16px;\n\t-webkit-box-flex: 0;\n\t-ms-flex: 0 0 auto;\n\tflex: 0 0 auto;\n\twidth: 50px;\n\theight: 50px;\n}\n\n.discord-light-theme .discord-invite .discord-invite-icon {\n\tbackground-color: #fff;\n}\n\n.discord-invite .discord-invite-info {\n\tfont-family: Whitney, 'Source Sans Pro', ui-sans-serif, system-ui, -apple-system, 'system-ui', 'Segoe UI', Roboto, 'Helvetica Neue', Arial,\n\t\tsans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n\tdisplay: flex;\n\tflex: 1 1 auto;\n\tflex-direction: column;\n\tflex-wrap: nowrap;\n\talign-items: stretch;\n\tjustify-content: center;\n}\n\n.discord-invite .discord-invite-title {\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tmargin-bottom: 2px;\n\tcolor: white;\n\tfont-size: 16px;\n\tline-height: 20px;\n\tfont-weight: 700;\n\tdisplay: flex;\n\tflex-direction: row;\n}\n\n.discord-light-theme .discord-invite .discord-invite-title {\n\tcolor: #060607;\n}\n\n.discord-invite .discord-invite-name {\n\tflex: 1 1 auto;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n}\n\n.discord-invite .discord-invite-counts {\n\tdisplay: flex;\n\talign-items: center;\n\tfont-size: 14px;\n\tfont-weight: 600;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\tcolor: #b9bbbe;\n\tline-height: 16px;\n}\n\n.discord-invite .discord-invite-status {\n\tdisplay: block;\n\tmargin-right: 4px;\n\twidth: 8px;\n\theight: 8px;\n\tborder-radius: 50%;\n\tbackground-color: #747f8d;\n}\n\n.discord-invite .discord-invite-status-online {\n\tbackground-color: #3ba55d;\n}\n\n.discord-invite .discord-invite-count {\n\t-webkit-box-flex: 0;\n\t-ms-flex: 0 1 auto;\n\tflex: 0 1 auto;\n\tmargin-right: 8px;\n\tcolor: #b9bbbe;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n}\n\n.discord-invite .discord-invite-join {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 40px;\n\tpadding: 0 20px;\n\talign-self: center;\n\tmargin-left: 10px;\n\t-webkit-box-flex: 0;\n\t-ms-flex: 0 0 auto;\n\tflex: 0 0 auto;\n\tline-height: 20px;\n\tborder-radius: 3px;\n\tfont-size: 14px;\n\tfont-weight: 600;\n\tcolor: white !important;\n\tbackground-color: #3ba55d;\n\t-webkit-transition: background-color 0.17s ease;\n\ttransition: background-color 0.17s ease;\n}\n\n.discord-invite .discord-invite-join:hover {\n\tbackground-color: #2d7d46;\n\ttext-decoration: none;\n}\n\n.discord-invite .discord-invite-badge {\n\t-webkit-box-flex: 0;\n\t-ms-flex: 0 0 auto;\n\tflex: 0 0 auto;\n\tmargin-right: 8px;\n\twidth: 16px;\n\theight: 16px;\n\talign-self: center;\n\tposition: relative;\n}\n\n.discord-invite .discord-invite-badge-verified {\n\tcolor: #3ba55d;\n}\n\n.discord-invite .discord-invite-badge-partnered {\n\tcolor: #5865f2;\n}\n\n.discord-invite .discord-invite-badge-container {\n\tposition: absolute;\n\ttop: -0.05px;\n\tleft: 0.05px;\n\tright: 0;\n\tbottom: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpointer-events: none;\n\tcolor: white;\n}\n\n.discord-light-theme .discord-invite .discord-invite-counts,\n.discord-light-theme .discord-invite .discord-invite-count {\n\tcolor: #4f5660;\n}\n",
    "import { Component, ComponentInterface, Element, h, Prop } from '@stencil/core';\nimport { defaultDiscordAvatars } from '../../options';\nimport GuildBadge from '../svgs/guild-badge';\nimport PartnerBadgeOverlay from '../svgs/partner-badge-overlay';\nimport VerifiedBadgeOverlay from '../svgs/verified-badge-overlay';\n\n@Component({\n\ttag: 'discord-invite',\n\tstyleUrl: 'discord-invite.css'\n})\nexport class DiscordInvite implements ComponentInterface {\n\t/**\n\t * The DiscordInvite element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The server icon to display for the invite.\n\t */\n\t@Prop()\n\tpublic icon = defaultDiscordAvatars.blue;\n\n\t/**\n\t * The server's name.\n\t * @default 'Discord Server'\n\t */\n\t@Prop()\n\tpublic name = 'Discord Server';\n\n\t/**\n\t * The URL to open when you click on the join button.\n\t */\n\t@Prop()\n\tpublic url: string;\n\n\t/**\n\t * The number of members online on the server.\n\t * @default 0\n\t */\n\t@Prop()\n\tpublic online = 0;\n\n\t/**\n\t * The number of members on the server.\n\t * @default 0\n\t */\n\t@Prop()\n\tpublic members = 0;\n\n\t/**\n\t * Whether the server is verified.\n\t * Only works if `partnered` is `false` or `undefined`.\n\t */\n\t@Prop()\n\tpublic verified = false;\n\n\t/**\n\t * Whether the server is partnered.\n\t * Only works if `verified` is `false` or `undefined`.\n\t */\n\t@Prop()\n\tpublic partnered = false;\n\n\t/**\n\t * Invitation embed title.\n\t * @default \"You've been invited to join a server\"\n\t */\n\t@Prop()\n\tpublic inviteTitle = \"You've been invited to join a server\";\n\n\t/**\n\t * The join button.\n\t * @default 'Join'\n\t */\n\t@Prop()\n\tpublic joinBtn = 'Join';\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div class=\"discord-invite\">\n\t\t\t\t<div class=\"discord-invite-header\">{this.inviteTitle}</div>\n\t\t\t\t<div class=\"discord-invite-root\">\n\t\t\t\t\t<img class=\"discord-invite-icon\" src={this.icon} alt={this.name} />\n\t\t\t\t\t<div class=\"discord-invite-info\">\n\t\t\t\t\t\t<div class=\"discord-invite-title\">\n\t\t\t\t\t\t\t{((this.verified && !this.partnered) || (!this.verified && this.partnered)) && (\n\t\t\t\t\t\t\t\t<div class=\"discord-invite-badge\">\n\t\t\t\t\t\t\t\t\t<GuildBadge\n\t\t\t\t\t\t\t\t\t\taria-label={this.partnered ? 'Discord Partner' : 'Verified'}\n\t\t\t\t\t\t\t\t\t\tclass={`discord-invite-badge-${this.partnered ? 'partnered' : 'verified'}`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div class=\"discord-invite-badge-container\">\n\t\t\t\t\t\t\t\t\t\t{this.partnered ? <PartnerBadgeOverlay /> : <VerifiedBadgeOverlay />}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<span class=\"discord-invite-name\">{this.name}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"discord-invite-counts\">\n\t\t\t\t\t\t\t<i class=\"discord-invite-status discord-invite-status-online\" />\n\t\t\t\t\t\t\t<span class=\"discord-invite-count\">{this.online.toLocaleString()} Online</span>\n\t\t\t\t\t\t\t<i class=\"discord-invite-status\" />\n\t\t\t\t\t\t\t<span class=\"discord-invite-count\">{this.members.toLocaleString()} Members</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<a class=\"discord-invite-join\" href={this.url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t{this.joinBtn}\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n",
    "import { Component, h } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-italic'\n})\nexport class DiscordItalic {\n\tpublic render() {\n\t\treturn (\n\t\t\t<em>\n\t\t\t\t<slot></slot>\n\t\t\t</em>\n\t\t);\n\t}\n}\n",
    "\"use strict\";\n\nvar removeHash = function removeHash(hex) {\n  return hex.charAt(0) === '#' ? hex.slice(1) : hex;\n};\n\nvar parseHex = function parseHex(nakedHex) {\n  var isShort = nakedHex.length === 3 || nakedHex.length === 4;\n  var twoDigitHexR = isShort ? \"\".concat(nakedHex.slice(0, 1)).concat(nakedHex.slice(0, 1)) : nakedHex.slice(0, 2);\n  var twoDigitHexG = isShort ? \"\".concat(nakedHex.slice(1, 2)).concat(nakedHex.slice(1, 2)) : nakedHex.slice(2, 4);\n  var twoDigitHexB = isShort ? \"\".concat(nakedHex.slice(2, 3)).concat(nakedHex.slice(2, 3)) : nakedHex.slice(4, 6);\n  var twoDigitHexA = (isShort ? \"\".concat(nakedHex.slice(3, 4)).concat(nakedHex.slice(3, 4)) : nakedHex.slice(6, 8)) || 'ff'; // const numericA = +((parseInt(a, 16) / 255).toFixed(2));\n\n  return {\n    r: twoDigitHexR,\n    g: twoDigitHexG,\n    b: twoDigitHexB,\n    a: twoDigitHexA\n  };\n};\n\nvar hexToDecimal = function hexToDecimal(hex) {\n  return parseInt(hex, 16);\n};\n\nvar hexesToDecimals = function hexesToDecimals(_ref) {\n  var r = _ref.r,\n      g = _ref.g,\n      b = _ref.b,\n      a = _ref.a;\n  return {\n    r: hexToDecimal(r),\n    g: hexToDecimal(g),\n    b: hexToDecimal(b),\n    a: +(hexToDecimal(a) / 255).toFixed(2)\n  };\n};\n\nvar isNumeric = function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}; // eslint-disable-line no-restricted-globals, max-len\n\n\nvar formatRgb = function formatRgb(decimalObject, parameterA) {\n  var r = decimalObject.r,\n      g = decimalObject.g,\n      b = decimalObject.b,\n      parsedA = decimalObject.a;\n  var a = isNumeric(parameterA) ? parameterA : parsedA;\n  return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(a, \")\");\n};\n/**\n * Turns an old-fashioned css hex color value into a rgb color value.\n *\n * If you specify an alpha value, you'll get a rgba() value instead.\n *\n * @param The hex value to convert. ('123456'. '#123456', ''123', '#123')\n * @param An alpha value to apply. (optional) ('0.5', '0.25')\n * @return An rgb or rgba value. ('rgb(11, 22, 33)'. 'rgba(11, 22, 33, 0.5)')\n */\n\n\nvar hexToRgba = function hexToRgba(hex, a) {\n  var hashlessHex = removeHash(hex);\n  var hexObject = parseHex(hashlessHex);\n  var decimalObject = hexesToDecimals(hexObject);\n  return formatRgb(decimalObject, a);\n};\n\nmodule.exports = hexToRgba;",
    "import { h } from '@stencil/core';\n\nexport default function ChannelForum<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"24\" height=\"24\" viewBox=\"0 0 20 20\" fill=\"none\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\td=\"M6.56929 14.6869H2.34375C1.97079 14.6869 1.61311 14.5387 1.34938 14.275C1.08566 14.0113 0.9375 13.6536 0.9375 13.2806V8.12437C0.9375 6.38389 1.6289 4.7147 2.85961 3.484C4.09032 2.25329 5.75951 1.56189 7.49999 1.56189C9.24047 1.56189 10.9097 2.25329 12.1404 3.484C12.6953 4.03895 13.1406 4.68307 13.4623 5.38267C14.9101 5.5973 16.2513 6.29124 17.2655 7.36251C18.4194 8.58133 19.0625 10.1959 19.0625 11.8744V17.0306C19.0625 17.4036 18.9144 17.7613 18.6506 18.025C18.3869 18.2887 18.0292 18.4369 17.6563 18.4369H12.5C11.1428 18.4369 9.81899 18.0162 8.71072 17.2328C7.7871 16.58 7.05103 15.7019 6.56929 14.6869ZM4.18544 4.80982C5.06451 3.93075 6.25679 3.43689 7.49999 3.43689C8.74319 3.43689 9.93549 3.93075 10.8146 4.80983C11.6936 5.6889 12.1875 6.88119 12.1875 8.12439C12.1875 9.36759 11.6936 10.5599 10.8146 11.439C9.93549 12.318 8.74321 12.8119 7.50001 12.8119H7.20268C7.19767 12.8118 7.19266 12.8118 7.18764 12.8119H2.8125V8.12438C2.8125 6.88118 3.30636 5.6889 4.18544 4.80982ZM8.672 14.5814C8.97763 15.0132 9.35591 15.3928 9.79299 15.7017C10.5847 16.2614 11.5305 16.5619 12.5 16.5619H17.1875V11.8744C17.1875 10.6755 16.7281 9.52219 15.9039 8.65159C15.3804 8.09865 14.735 7.68644 14.027 7.44246C14.0506 7.66798 14.0625 7.89557 14.0625 8.12439C14.0625 9.86487 13.3711 11.5341 12.1404 12.7648C11.1896 13.7156 9.97697 14.3445 8.672 14.5814Z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function ChannelIcon<T>(props: T) {\n\treturn (\n\t\t<svg {...props} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\td=\"M5.88657 21C5.57547 21 5.3399 20.7189 5.39427 20.4126L6.00001 17H2.59511C2.28449 17 2.04905 16.7198 2.10259 16.4138L2.27759 15.4138C2.31946 15.1746 2.52722 15 2.77011 15H6.35001L7.41001 9H4.00511C3.69449 9 3.45905 8.71977 3.51259 8.41381L3.68759 7.41381C3.72946 7.17456 3.93722 7 4.18011 7H7.76001L8.39677 3.41262C8.43914 3.17391 8.64664 3 8.88907 3H9.87344C10.1845 3 10.4201 3.28107 10.3657 3.58738L9.76001 7H15.76L16.3968 3.41262C16.4391 3.17391 16.6466 3 16.8891 3H17.8734C18.1845 3 18.4201 3.28107 18.3657 3.58738L17.76 7H21.1649C21.4755 7 21.711 7.28023 21.6574 7.58619L21.4824 8.58619C21.4406 8.82544 21.2328 9 20.9899 9H17.41L16.35 15H19.7549C20.0655 15 20.301 15.2802 20.2474 15.5862L20.0724 16.5862C20.0306 16.8254 19.8228 17 19.5799 17H16L15.3632 20.5874C15.3209 20.8261 15.1134 21 14.8709 21H13.8866C13.5755 21 13.3399 20.7189 13.3943 20.4126L14 17H8.00001L7.36325 20.5874C7.32088 20.8261 7.11337 21 6.87094 21H5.88657ZM9.41045 9L8.35045 15H14.3504L15.4104 9H9.41045Z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function ChannelThread<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M5.43309 21C5.35842 21 5.30189 20.9325 5.31494 20.859L5.99991 17H2.14274C2.06819 17 2.01168 16.9327 2.02453 16.8593L2.33253 15.0993C2.34258 15.0419 2.39244 15 2.45074 15H6.34991L7.40991 9H3.55274C3.47819 9 3.42168 8.93274 3.43453 8.85931L3.74253 7.09931C3.75258 7.04189 3.80244 7 3.86074 7H7.75991L8.45234 3.09903C8.46251 3.04174 8.51231 3 8.57049 3H10.3267C10.4014 3 10.4579 3.06746 10.4449 3.14097L9.75991 7H15.7599L16.4523 3.09903C16.4625 3.04174 16.5123 3 16.5705 3H18.3267C18.4014 3 18.4579 3.06746 18.4449 3.14097L17.7599 7H21.6171C21.6916 7 21.7481 7.06725 21.7353 7.14069L21.4273 8.90069C21.4172 8.95811 21.3674 9 21.3091 9H17.4099L17.0495 11.04H15.05L15.4104 9H9.41035L8.35035 15H10.5599V17H7.99991L7.30749 20.901C7.29732 20.9583 7.24752 21 7.18934 21H5.43309Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M13.4399 12.96C12.9097 12.96 12.4799 13.3898 12.4799 13.92V20.2213C12.4799 20.7515 12.9097 21.1813 13.4399 21.1813H14.3999C14.5325 21.1813 14.6399 21.2887 14.6399 21.4213V23.4597C14.6399 23.6677 14.8865 23.7773 15.0408 23.6378L17.4858 21.4289C17.6622 21.2695 17.8916 21.1813 18.1294 21.1813H22.5599C23.0901 21.1813 23.5199 20.7515 23.5199 20.2213V13.92C23.5199 13.3898 23.0901 12.96 22.5599 12.96H13.4399Z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function LockedVoiceChannel<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M17 11V7C17 4.243 14.756 2 12 2C9.242 2 7 4.243 7 7V11C5.897 11 5 11.896 5 13V20C5 21.103 5.897 22 7 22H17C18.103 22 19 21.103 19 20V13C19 11.896 18.103 11 17 11ZM12 18C11.172 18 10.5 17.328 10.5 16.5C10.5 15.672 11.172 15 12 15C12.828 15 13.5 15.672 13.5 16.5C13.5 17.328 12.828 18 12 18ZM15 11H9V7C9 5.346 10.346 4 12 4C13.654 4 15 5.346 15 7V11Z\"\n\t\t\t\taria-hidden=\"true\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function VoiceChannel<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\td=\"M11.383 3.07904C11.009 2.92504 10.579 3.01004 10.293 3.29604L6 8.00204H3C2.45 8.00204 2 8.45304 2 9.00204V15.002C2 15.552 2.45 16.002 3 16.002H6L10.293 20.71C10.579 20.996 11.009 21.082 11.383 20.927C11.757 20.772 12 20.407 12 20.002V4.00204C12 3.59904 11.757 3.23204 11.383 3.07904ZM14 5.00195V7.00195C16.757 7.00195 19 9.24595 19 12.002C19 14.759 16.757 17.002 14 17.002V19.002C17.86 19.002 21 15.863 21 12.002C21 8.14295 17.86 5.00195 14 5.00195ZM14 9.00195C15.654 9.00195 17 10.349 17 12.002C17 13.657 15.654 15.002 14 15.002V13.002C14.551 13.002 15 12.553 15 12.002C15 11.451 14.551 11.002 14 11.002V9.00195Z\"\n\t\t\t\taria-hidden=\"true\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    ".discord-message .discord-mention {\n\tcolor: #e3e7f8;\n\tbackground-color: hsla(235, 85.6%, 64.7%, 0.3);\n\tfont-weight: 500;\n\tpadding: 0 2px;\n\tborder-radius: 3px;\n\tunicode-bidi: -moz-plaintext;\n\tunicode-bidi: plaintext;\n\t-webkit-transition: background-color 50ms ease-out, color 50ms ease-out;\n\ttransition: background-color 50ms ease-out, color 50ms ease-out;\n\tcursor: pointer;\n}\n\n.discord-message .discord-mention:hover {\n\tcolor: #fff;\n\tbackground-color: hsl(235, 85.6%, 64.7%);\n}\n\n.discord-message .discord-mention.discord-channel-mention {\n\tpadding-left: 1.2rem !important;\n\tposition: relative;\n}\n\n.discord-message .discord-mention.discord-voice-mention,\n.discord-message .discord-mention.discord-locked-mention,\n.discord-message .discord-mention.discord-thread-mention,\n.discord-message .discord-mention.discord-forum-mention {\n\tpadding-left: 1.25rem !important;\n\tposition: relative;\n}\n\n.discord-light-theme .discord-message .discord-mention {\n\tcolor: #687dc6;\n\tbackground-color: hsla(235, 85.6%, 64.7%, 0.15);\n}\n\n.discord-light-theme .discord-message .discord-mention:hover {\n\tcolor: #ffffff;\n\tbackground-color: hsl(235, 85.6%, 64.7%);\n}\n\n.discord-message .discord-mention .discord-mention-icon {\n\twidth: 1rem;\n\theight: 1rem;\n\tobject-fit: contain;\n\tposition: absolute;\n\tleft: 0.125rem;\n\ttop: 0.125rem;\n}\n",
    "import { Component, ComponentInterface, Element, h, Host, Prop, Watch } from '@stencil/core';\nimport hexToRgba from 'hex-to-rgba';\nimport ChannelForum from '../svgs/channel-forum';\nimport ChannelIcon from '../svgs/channel-icon';\nimport ChannelThread from '../svgs/channel-thread';\nimport LockedVoiceChannel from '../svgs/locked-voice-channel';\nimport VoiceChannel from '../svgs/voice-channel';\n\n@Component({\n\ttag: 'discord-mention',\n\tstyleUrl: 'discord-mention.css'\n})\nexport class DiscordMention implements ComponentInterface {\n\t/**\n\t * The DiscordMention element\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * Whether this entire message block should be highlighted (to emulate the \"logged in user\" being pinged).\n\t */\n\t@Prop()\n\tpublic highlight = false;\n\n\t/**\n\t * The color to use for this mention. Only works for role mentions and must be in hex format.\n\t */\n\t@Prop()\n\tpublic color: string;\n\n\t/**\n\t * The type of mention this should be. This will prepend the proper prefix character.\n\t * Valid values: `user`, `channel`, `role`, `voice`, `locked`, `thread`, `forum`, and `slash`.\n\t */\n\t@Prop()\n\tpublic type: 'user' | 'channel' | 'role' | 'voice' | 'locked' | 'thread' | 'forum' | 'slash' = 'user';\n\n\t@Watch('type')\n\tpublic handleType(value: string) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow new TypeError('DiscordMention `type` prop must be a string.');\n\t\t} else if (!['user', 'channel', 'role', 'voice', 'locked', 'thread', 'forum', 'slash'].includes(value)) {\n\t\t\tthrow new RangeError(\n\t\t\t\t\"DiscordMention `type` prop must be one of: 'user', 'channel', 'role', 'voice', 'locked', 'thread', 'forum', 'slash'\"\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic componentWillRender() {\n\t\tthis.handleType(this.type);\n\t}\n\n\tpublic componentDidLoad() {\n\t\tif (this.color && this.type === 'role') {\n\t\t\tthis.el.addEventListener('mouseover', this.setHoverColor.bind(this));\n\t\t\tthis.el.addEventListener('mouseout', this.resetHoverColor.bind(this));\n\t\t}\n\t}\n\n\tpublic disconnectedCallback() {\n\t\tif (this.color && this.type === 'role') {\n\t\t\tthis.el.removeEventListener('mouseover', this.setHoverColor.bind(this));\n\t\t\tthis.el.removeEventListener('mouseout', this.resetHoverColor.bind(this));\n\t\t}\n\t}\n\n\tpublic setHoverColor() {\n\t\tthis.el.style.backgroundColor = hexToRgba(this.color, 0.3);\n\t}\n\n\tpublic resetHoverColor() {\n\t\tthis.el.style.backgroundColor = hexToRgba(this.color, 0.1);\n\t}\n\n\tpublic render() {\n\t\tconst { color, type }: { color?: string; type?: string } = this;\n\n\t\tconst colorStyle: {\n\t\t\tcolor?: string;\n\t\t\t'background-color'?: string;\n\t\t} = !color || type !== 'role' ? {} : { color, 'background-color': hexToRgba(color, 0.1) };\n\n\t\tlet mentionPrepend = '';\n\n\t\tswitch (this.type) {\n\t\t\tcase 'channel':\n\t\t\t\tmentionPrepend = <ChannelIcon class=\"discord-mention-icon\" />;\n\t\t\t\tbreak;\n\t\t\tcase 'user':\n\t\t\tcase 'role':\n\t\t\t\tmentionPrepend = '@';\n\t\t\t\tbreak;\n\t\t\tcase 'voice':\n\t\t\t\tmentionPrepend = <VoiceChannel class=\"discord-mention-icon\" />;\n\t\t\t\tbreak;\n\t\t\tcase 'locked':\n\t\t\t\tmentionPrepend = <LockedVoiceChannel class=\"discord-mention-icon\" />;\n\t\t\t\tbreak;\n\t\t\tcase 'thread':\n\t\t\t\tmentionPrepend = <ChannelThread class=\"discord-mention-icon\" />;\n\t\t\t\tbreak;\n\t\t\tcase 'forum':\n\t\t\t\tmentionPrepend = <ChannelForum class=\"discord-mention-icon\" />;\n\t\t\t\tbreak;\n\t\t\tcase 'slash':\n\t\t\t\tmentionPrepend = '/';\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (\n\t\t\t<Host style={colorStyle} class={`discord-mention discord-${type}-mention`}>\n\t\t\t\t{mentionPrepend}\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    "import { h } from '@stencil/core';\n\nconst VerifiedTick = () => (\n\t<svg class=\"discord-application-tag-verified\" aria-label=\"Verified Bot\" aria-hidden=\"false\" width=\"16\" height=\"16\" viewBox=\"0 0 16 15.2\">\n\t\t<path d=\"M7.4,11.17,4,8.62,5,7.26l2,1.53L10.64,4l1.36,1Z\" fill=\"currentColor\" />\n\t</svg>\n);\n\nexport default VerifiedTick;\n",
    "import { FunctionalComponent, h } from '@stencil/core';\nimport Fragment from '../../Fragment';\nimport VerifiedTick from '../svgs/verified-tick';\n\ninterface AuthorInfoProps {\n\t/**\n\t * The name of the author\n\t */\n\tauthor: string;\n\t/**\n\t * Whether this author is a bot. Only works if `server` is `false` or `undefined`.\n\t */\n\tbot: boolean;\n\t/**\n\t * Whether this author is a `server` crosspost webhook. Only works if `bot` is `false` or `undefined`.\n\t */\n\tserver: boolean;\n\t/**\n\t * Whether this author is the original poster.\n\t */\n\top: boolean;\n\t/**\n\t * The colour of the author, which comes from their highest role\n\t */\n\troleColor: string;\n\t/**\n\t * The role icon of the author, which comes from their highest role\n\t */\n\troleIcon: string;\n\t/**\n\t * The role name of the author, which comes from their highest role\n\t */\n\troleName: string;\n\t/**\n\t * Whether this bot is verified by Discord. Only works if `bot` is `true`\n\t */\n\tverified: boolean;\n\t/**\n\t * Whether to reverse the order of the author info for compact mode.\n\t */\n\tcompact: boolean;\n}\n\nexport const AuthorInfo: FunctionalComponent<AuthorInfoProps> = ({ author, bot, server, op, roleColor, roleIcon, roleName, verified, compact }) => (\n\t<span class=\"discord-author-info\">\n\t\t{!compact && (\n\t\t\t<Fragment>\n\t\t\t\t<span class=\"discord-author-username\" style={{ color: roleColor }}>\n\t\t\t\t\t{author}\n\t\t\t\t</span>\n\t\t\t\t{roleIcon && <img class=\"discord-author-role-icon\" src={roleIcon} height=\"20\" width=\"20\" alt={roleName} draggable={false} />}\n\t\t\t</Fragment>\n\t\t)}\n\t\t{\n\t\t\t<Fragment>\n\t\t\t\t{/* If bot is true then we need to render a Bot tag */}\n\t\t\t\t{bot && !server && (\n\t\t\t\t\t<span class=\"discord-application-tag\">\n\t\t\t\t\t\t{/* If verified is true then a verified checkmark should be prefixed */}\n\t\t\t\t\t\t{verified && <VerifiedTick />}\n\t\t\t\t\t\tBot\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t\t{server && !bot && <span class=\"discord-application-tag\">Server</span>}\n\t\t\t\t{op && <span class=\"discord-application-tag discord-application-tag-op\">OP</span>}\n\t\t\t</Fragment>\n\t\t}\n\t\t{compact && (\n\t\t\t<span class=\"discord-author-username\" style={{ color: roleColor }}>\n\t\t\t\t{author}\n\t\t\t</span>\n\t\t)}\n\t</span>\n);\n",
    "import { h } from '@stencil/core';\n\nexport default function Ephemeral<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M12 5C5.648 5 1 12 1 12C1 12 5.648 19 12 19C18.352 19 23 12 23 12C23 12 18.352 5 12 5ZM12 16C9.791 16 8 14.21 8 12C8 9.79 9.791 8 12 8C14.209 8 16 9.79 16 12C16 14.21 14.209 16 12 16Z\"\n\t\t\t></path>\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14Z\"\n\t\t\t></path>\n\t\t</svg>\n\t);\n}\n",
    ".discord-message {\n\tcolor: #dcddde;\n\tdisplay: flex;\n\tflex-direction: column;\n\tfont-size: 0.9em;\n\tfont-family: Whitney, 'Source Sans Pro', ui-sans-serif, system-ui, -apple-system, 'system-ui', 'Segoe UI', Roboto, 'Helvetica Neue', Arial,\n\t\tsans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n\tpadding: 0px 1em;\n\n\tposition: relative;\n\tword-wrap: break-word;\n\t-webkit-user-select: text;\n\t-moz-user-select: text;\n\t-ms-user-select: text;\n\tuser-select: text;\n\t-webkit-box-flex: 0;\n\t-ms-flex: 0 0 auto;\n\tflex: 0 0 auto;\n\tpadding-right: 0;\n\tmin-height: 1.375rem;\n\tpadding-right: 48px !important;\n\tmargin-top: 1.0625rem;\n}\n\n.discord-message .discord-message-inner {\n\tdisplay: flex;\n\tposition: relative;\n\t-webkit-box-flex: 0;\n\t-ms-flex: 0 0 auto;\n\tflex: 0 0 auto;\n}\n\n.discord-message.discord-highlight-mention,\n.discord-message.discord-highlight-ephemeral {\n\tpadding-right: 5px;\n\tposition: relative;\n}\n\n.discord-message.discord-highlight-mention::before,\n.discord-message.discord-highlight-ephemeral::before {\n\tcontent: '';\n\tposition: absolute;\n\tdisplay: block;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0;\n\tpointer-events: none;\n\twidth: 2px;\n}\n\n.discord-message.discord-highlight-mention {\n\tbackground-color: rgba(250, 166, 26, 0.1);\n}\n\n.discord-light-theme .discord-message.discord-highlight-mention {\n\tbackground-color: rgba(250, 166, 26, 0.1);\n}\n\n.discord-message.discord-highlight-mention:hover {\n\tbackground-color: rgba(250, 166, 26, 0.08);\n}\n\n.discord-light-theme .discord-message.discord-highlight-mention:hover {\n\tbackground-color: rgba(250, 166, 26, 0.2);\n}\n\n.discord-message.discord-highlight-mention::before {\n\tbackground-color: #faa61a;\n}\n\n.discord-message.discord-highlight-ephemeral {\n\tbackground-color: rgba(88, 101, 242, 0.05);\n}\n\n.discord-light-theme .discord-message.discord-highlight-ephemeral {\n\tbackground-color: rgba(250, 166, 26, 0.1);\n}\n\n.discord-message.discord-highlight-ephemeral:hover {\n\tbackground-color: rgba(88, 101, 242, 0.1);\n}\n\n.discord-message.discord-highlight-ephemeral::before {\n\tbackground-color: #5865f2;\n}\n\n.discord-light-theme .discord-message {\n\tcolor: #2e3338;\n\tborder-color: #eceeef;\n}\n\n.discord-message a {\n\tcolor: #00aff4;\n\tfont-weight: normal;\n\ttext-decoration: none;\n}\n\n.discord-message a:hover {\n\ttext-decoration: underline;\n}\n\n.discord-light-theme .discord-message a {\n\tcolor: #00b0f4;\n}\n\n.discord-message a:hover {\n\ttext-decoration: underline;\n}\n\n.discord-message .discord-author-avatar {\n\tmargin-right: 16px;\n\tmargin-top: 5px;\n\tmin-width: 40px;\n\tz-index: 1;\n}\n\n.discord-message .discord-author-avatar img {\n\twidth: 40px;\n\theight: 40px;\n\tborder-radius: 50%;\n}\n\n.discord-message .discord-message-timestamp {\n\tcolor: #72767d;\n\tfont-size: 12px;\n\tmargin-left: 3px;\n}\n\n.discord-light-theme .discord-message .discord-message-timestamp {\n\tcolor: #747f8d;\n}\n\n.discord-message .discord-message-edited {\n\tcolor: #72767d;\n\tfont-size: 10px;\n}\n\n.discord-light-theme .discord-message .discord-message-edited {\n\tcolor: #99aab5;\n}\n\n.discord-message .discord-message-content {\n\twidth: 100%;\n\tline-height: 160%;\n\tfont-weight: normal;\n\tpadding-top: 2px;\n}\n\n.discord-message .discord-message-body {\n\tfont-size: 1rem;\n\tfont-weight: 400;\n\tword-break: break-word;\n\tposition: relative;\n}\n\n.discord-message .discord-message-body strong {\n\tfont-weight: 700;\n}\n\n.discord-message .discord-message-body em {\n\tfont-style: italic;\n}\n\n.discord-message .discord-message-body u {\n\ttext-decoration-color: rgb(220, 221, 222);\n\ttext-decoration-line: underline;\n\ttext-decoration-style: solid;\n\ttext-decoration-thickness: auto;\n}\n\n.discord-message .discord-message-body pre {\n\tborder: 1px solid #202225;\n\tborder-radius: 4px;\n}\n\n.discord-message .discord-message-body code {\n\tbackground: #2f3136;\n\twhite-space: break-spaces;\n\tfont-family: Consolas, Andale Mono WT, Andale Mono, Lucida Console, Lucida Sans Typewriter, DejaVu Sans Mono, Bitstream Vera Sans Mono,\n\t\tLiberation Mono, Nimbus Mono L, Monaco, Courier New, Courier, monospace;\n}\n\n.discord-light-theme .discord-message .discord-message-timestamp,\n.discord-compact-mode .discord-message:hover .discord-message-timestamp,\n.discord-compact-mode.discord-light-theme .discord-message:hover .discord-message-timestamp {\n\tcolor: #99aab5;\n}\n\n.discord-compact-mode.discord-light-theme .discord-message .discord-message-timestamp {\n\tcolor: #d1d9de;\n}\n\n.discord-compact-mode .discord-message .discord-message-timestamp {\n\tdisplay: inline-block;\n\twidth: 3.1rem;\n\ttext-align: right;\n\tfont-size: 0.6875rem;\n\tline-height: 1.375rem;\n\tmargin-right: 0.25rem;\n\tmargin-left: 0;\n\ttext-indent: 0;\n}\n\n.discord-compact-mode .discord-message {\n\tmargin-top: unset;\n}\n\n.discord-compact-mode .discord-message .discord-message-body {\n\tline-height: 1.375rem;\n\tpadding-left: 10px;\n\ttext-indent: -6px;\n}\n\n.discord-compact-mode .discord-message .discord-message-compact-indent {\n\tpadding-left: 10px;\n}\n\n.discord-message:first-child {\n\tmargin-top: 0.5rem;\n}\n\n.discord-message:last-child {\n\tmargin-bottom: 0.5rem;\n\tborder-bottom-width: 0;\n}\n\n.discord-message .discord-message-markup {\n\tfont-size: 1rem;\n\tline-height: 1.375rem;\n\tword-wrap: break-word;\n\tuser-select: text;\n\tfont-weight: 400;\n}\n\n.discord-compact-mode .discord-author-avatar {\n\tdisplay: none;\n}\n\n.discord-message:hover {\n\tbackground-color: rgba(4, 4, 5, 0.07);\n}\n\n.discord-light-theme .discord-message:hover {\n\tbackground-color: rgba(6, 6, 7, 0.02);\n}\n\n.discord-message.discord-message-has-thread:after {\n\twidth: 2rem;\n\tleft: 2.2rem;\n\ttop: 1.75rem;\n\tborder-left: 2px solid #4f545c;\n\tborder-bottom: 2px solid #4f545c;\n\tborder-bottom-left-radius: 8px;\n\tbottom: 29px;\n\tcontent: '';\n\tposition: absolute;\n}\n\n.discord-light-theme .discord-message.discord-message-has-thread:after {\n\tborder-color: #747f8d;\n}\n\n.discord-message-ephemeral {\n\tcolor: #72767d;\n\tmargin-top: 4px;\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tcolor: #72767d;\n}\n\n.discord-light-theme .discord-message-ephemeral {\n\tcolor: #747f8d;\n}\n\n.discord-message-ephemeral .discord-message-ephemeral-link {\n\tcolor: #00aff4;\n\tfont-weight: 500;\n\tcursor: pointer;\n}\n\n.discord-message-ephemeral .discord-message-ephemeral-link:hover {\n\ttext-decoration: underline;\n}\n\n.discord-message-ephemeral .discord-message-ephemeral-icon {\n\tmargin-right: 4px;\n\tvertical-align: text-bottom;\n}\n\n@import '../author-info/author-info.css';\n",
    "import { Component, ComponentInterface, Element, h, Host, Prop, Watch } from '@stencil/core';\nimport clsx from 'clsx';\nimport Fragment from '../../Fragment';\nimport { avatars, Profile, profiles } from '../../options';\nimport { DiscordTimestamp, handleTimestamp } from '../../util';\nimport { AuthorInfo } from '../author-info/author-info';\nimport Ephemeral from '../svgs/ephemeral';\n\n@Component({\n\ttag: 'discord-message',\n\tstyleUrl: 'discord-message.css'\n})\nexport class DiscordMessage implements ComponentInterface {\n\t/**\n\t * The DiscordMessage element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The id of the profile data to use.\n\t */\n\t@Prop()\n\tpublic profile: string;\n\n\t/**\n\t * The message author's username.\n\t * @default 'User'\n\t */\n\t@Prop()\n\tpublic author = 'User';\n\n\t/**\n\t * The message author's avatar. Can be an avatar shortcut, relative path, or external link.\n\t */\n\t@Prop()\n\tpublic avatar: string;\n\n\t/**\n\t * Whether the message author is a bot or not.\n\t * Only works if `server` is `false` or `undefined`.\n\t */\n\t@Prop()\n\tpublic bot = false;\n\n\t/**\n\t * Whether the message author is a server crosspost webhook or not.\n\t * Only works if `bot` is `false` or `undefined`.\n\t */\n\t@Prop()\n\tpublic server = false;\n\n\t/**\n\t * Whether the bot is verified or not.\n\t * Only works if `bot` is `true`\n\t */\n\t@Prop()\n\tpublic verified = false;\n\n\t/**\n\t * Whether the author is the original poster.\n\t */\n\t@Prop()\n\tpublic op = false;\n\n\t/**\n\t * Whether the message has been edited or not.\n\t */\n\t@Prop()\n\tpublic edited = false;\n\n\t/**\n\t * The message author's primary role color. Can be any [CSS color value](https://www.w3schools.com/cssref/css_colors_legal.asp).\n\t */\n\t@Prop()\n\tpublic roleColor: string;\n\n\t/**\n\t * The message author's role icon URL.\n\t */\n\t@Prop()\n\tpublic roleIcon: string;\n\n\t/**\n\t * The name of the role to use as alternative image text.\n\t */\n\t@Prop()\n\tpublic roleName: string;\n\n\t/**\n\t * Whether to highlight this message.\n\t */\n\t@Prop()\n\tpublic highlight = false;\n\n\t/**\n\t * Whether to make this message ephemeral.\n\t */\n\t@Prop()\n\tpublic ephemeral = false;\n\n\t/**\n\t * The timestamp to use for the message date.\n\t */\n\t@Prop({ mutable: true, reflect: true })\n\tpublic timestamp: DiscordTimestamp = new Date();\n\n\t/**\n\t * Whether to use 24-hour format for the timestamp.\n\t */\n\t@Prop()\n\tpublic twentyFour = false;\n\n\t@Watch('timestamp')\n\tpublic updateTimestamp(value: DiscordTimestamp): string | null {\n\t\tconst parent: HTMLDiscordMessagesElement = this.el.parentElement as HTMLDiscordMessagesElement;\n\t\treturn handleTimestamp(value, parent.compactMode, this.twentyFour);\n\t}\n\n\tpublic componentWillRender() {\n\t\tconst parent: HTMLDiscordMessagesElement = this.el.parentElement as HTMLDiscordMessagesElement;\n\t\tthis.timestamp = handleTimestamp(this.timestamp, parent.compactMode, this.twentyFour);\n\t}\n\n\tpublic render() {\n\t\tconst parent: HTMLDiscordMessagesElement = this.el.parentElement as HTMLDiscordMessagesElement;\n\n\t\tif (parent.tagName.toLowerCase() !== 'discord-messages') {\n\t\t\tthrow new Error('All <discord-message> components must be direct children of <discord-messages>.');\n\t\t}\n\n\t\tconst resolveAvatar = (avatar: string): string => avatars[avatar] ?? avatar ?? avatars.default;\n\n\t\tconst defaultData: Profile = {\n\t\t\tauthor: this.author,\n\t\t\tbot: this.bot,\n\t\t\tverified: this.verified,\n\t\t\tserver: this.server,\n\t\t\top: this.op,\n\t\t\troleColor: this.roleColor,\n\t\t\troleIcon: this.roleIcon,\n\t\t\troleName: this.roleName\n\t\t};\n\t\tconst profileData: Profile = Reflect.get(profiles, this.profile) ?? {};\n\t\tconst profile: Profile = { ...defaultData, ...profileData, ...{ avatar: resolveAvatar(profileData.avatar ?? this.avatar) } };\n\n\t\tconst highlightMention: boolean =\n\t\t\t// @ts-expect-error ts doesn't understand this\n\t\t\tArray.from(this.el.children).some((child: HTMLDiscordMentionElement): boolean => {\n\t\t\t\treturn child.tagName.toLowerCase() === 'discord-mention' && child.highlight && ['user', 'role'].includes(child.type);\n\t\t\t}) || this.highlight;\n\n\t\tconst hasThread: boolean =\n\t\t\t// @ts-expect-error ts doesn't understand this\n\t\t\tArray.from(this.el.children).some((child: HTMLDiscordThreadElement): boolean => {\n\t\t\t\treturn child.tagName.toLowerCase() === 'discord-thread';\n\t\t\t});\n\n\t\treturn (\n\t\t\t<Host\n\t\t\t\tclass={clsx('discord-message', {\n\t\t\t\t\t'discord-highlight-mention': highlightMention,\n\t\t\t\t\t'discord-message-has-thread': hasThread,\n\t\t\t\t\t'discord-highlight-ephemeral': this.ephemeral\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<slot name=\"reply\"></slot>\n\t\t\t\t<div class=\"discord-message-inner\">\n\t\t\t\t\t{parent.compactMode && <span class=\"discord-message-timestamp\">{this.timestamp}</span>}\n\t\t\t\t\t<div class=\"discord-author-avatar\">\n\t\t\t\t\t\t<img src={profile.avatar} alt={profile.author} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"discord-message-content\">\n\t\t\t\t\t\t{!parent.compactMode && (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<AuthorInfo\n\t\t\t\t\t\t\t\t\tauthor={profile.author ?? ''}\n\t\t\t\t\t\t\t\t\tbot={profile.bot ?? false}\n\t\t\t\t\t\t\t\t\tserver={profile.server ?? false}\n\t\t\t\t\t\t\t\t\tverified={profile.verified ?? false}\n\t\t\t\t\t\t\t\t\top={profile.op ?? false}\n\t\t\t\t\t\t\t\t\troleColor={profile.roleColor ?? ''}\n\t\t\t\t\t\t\t\t\troleIcon={profile.roleIcon ?? ''}\n\t\t\t\t\t\t\t\t\troleName={profile.roleName ?? ''}\n\t\t\t\t\t\t\t\t\tcompact={parent.compactMode}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span class=\"discord-message-timestamp\">{this.timestamp}</span>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<div class=\"discord-message-body\">\n\t\t\t\t\t\t\t{parent.compactMode && (\n\t\t\t\t\t\t\t\t<AuthorInfo\n\t\t\t\t\t\t\t\t\tauthor={profile.author ?? ''}\n\t\t\t\t\t\t\t\t\tbot={profile.bot ?? false}\n\t\t\t\t\t\t\t\t\tserver={profile.server ?? false}\n\t\t\t\t\t\t\t\t\tverified={profile.verified ?? false}\n\t\t\t\t\t\t\t\t\top={profile.op ?? false}\n\t\t\t\t\t\t\t\t\troleColor={profile.roleColor ?? ''}\n\t\t\t\t\t\t\t\t\troleIcon={profile.roleIcon ?? ''}\n\t\t\t\t\t\t\t\t\troleName={profile.roleName ?? ''}\n\t\t\t\t\t\t\t\t\tcompact={parent.compactMode}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<span class=\"discord-message-markup\">\n\t\t\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t{this.edited ? <span class=\"discord-message-edited\">(edited)</span> : ''}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"discord-message-compact-indent\">\n\t\t\t\t\t\t\t<slot name=\"embeds\"></slot>\n\t\t\t\t\t\t\t<slot name=\"attachments\"></slot>\n\t\t\t\t\t\t\t<slot name=\"components\"></slot>\n\t\t\t\t\t\t\t<slot name=\"reactions\"></slot>\n\t\t\t\t\t\t\t<slot name=\"thread\"></slot>\n\t\t\t\t\t\t\t{this.ephemeral && (\n\t\t\t\t\t\t\t\t<div class=\"discord-message-ephemeral\">\n\t\t\t\t\t\t\t\t\t<Ephemeral class=\"discord-message-ephemeral-icon\" />\n\t\t\t\t\t\t\t\t\tOnly you can see this • <span class=\"discord-message-ephemeral-link\">Dismiss message</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    "@import url('https://fonts.bunny.net/css?family=roboto:400,500,700');\n\n/* New Whitney fonts to match rebrading */\n@font-face {\n\tfont-family: 'Whitney';\n\tsrc: url('/assets/fonts/whitney/Book.woff') format('woff');\n\tfont-weight: 400;\n}\n@font-face {\n\tfont-family: 'Whitney';\n\tsrc: url('/assets/fonts/whitney/Medium.woff') format('woff');\n\tfont-weight: 500;\n}\n@font-face {\n\tfont-family: 'Whitney';\n\tsrc: url('/assets/fonts/whitney/Semibold.woff') format('woff');\n\tfont-weight: 600;\n}\n@font-face {\n\tfont-family: 'Whitney';\n\tsrc: url('/assets/fonts/whitney/Bold.woff') format('woff');\n\tfont-weight: 700;\n}\n\n.discord-messages {\n\tcolor: #fff;\n\tbackground-color: #36393e;\n\tdisplay: block;\n\tfont-size: 16px;\n\tfont-family: Whitney, 'Source Sans Pro', ui-sans-serif, system-ui, -apple-system, 'system-ui', 'Segoe UI', Roboto, 'Helvetica Neue', Arial,\n\t\tsans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n\tline-height: 170%;\n\tborder: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n.discord-messages.discord-light-theme {\n\tcolor: #747f8d;\n\tbackground-color: #fff;\n\tborder-color: #dedede;\n}\n\n.discord-messages.discord-no-background {\n\tbackground-color: unset;\n}\n",
    "import { Component, ComponentInterface, h, Host, Prop } from '@stencil/core';\nimport clsx from 'clsx';\nimport { defaultBackground, defaultMode, defaultTheme } from '../../options';\n\n@Component({\n\ttag: 'discord-messages',\n\tstyleUrl: 'discord-messages.css'\n})\nexport class DiscordMessages implements ComponentInterface {\n\t/**\n\t * Whether to use light theme or not.\n\t */\n\t@Prop({ mutable: true, reflect: true })\n\tpublic lightTheme: boolean;\n\n\t/**\n\t * Whether to exclude the background or not.\n\t */\n\t@Prop({ mutable: true, reflect: true })\n\tpublic noBackground: boolean;\n\n\t/**\n\t * Whether to use compact mode or not.\n\t */\n\t@Prop({ mutable: true, reflect: true })\n\tpublic compactMode: boolean;\n\n\tpublic componentWillRender() {\n\t\tif (this.lightTheme || (defaultTheme === 'light' && this.lightTheme)) {\n\t\t\tthis.lightTheme = true;\n\t\t}\n\n\t\tif (this.compactMode || (defaultMode === 'compact' && this.compactMode)) {\n\t\t\tthis.compactMode = true;\n\t\t}\n\n\t\tif (this.noBackground || (defaultBackground === 'none' && this.noBackground)) {\n\t\t\tthis.noBackground = true;\n\t\t}\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<Host\n\t\t\t\tclass={clsx(\n\t\t\t\t\t{\n\t\t\t\t\t\t'discord-light-theme': this.lightTheme,\n\t\t\t\t\t\t'discord-compact-mode': this.compactMode,\n\t\t\t\t\t\t'discord-no-background': this.noBackground\n\t\t\t\t\t},\n\t\t\t\t\t'discord-messages'\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    ".discord-message .discord-message-body .discord-quote-container {\n\tdisplay: flex;\n}\n\n.discord-message .discord-message-body .discord-quote-container > .discord-quote-divider {\n\tbackground-color: #4f545c;\n\tborder-radius: 4px;\n\tfont-size: 0.9em;\n\tfont-style: normal;\n\tfont-weight: 400;\n\tmargin: 0;\n\tpadding: 0;\n\twidth: 4px;\n}\n\n.discord-message .discord-message-body blockquote {\n\tmargin-block-end: unset;\n\tmargin-block-start: unset;\n\tmargin-inline-end: unset;\n\tmargin-inline-start: unset;\n\tpadding: 0 8px 0 12px;\n}\n",
    "import { Component, h, Host } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-quote',\n\tstyleUrl: 'discord-quote.css'\n})\nexport class DiscordQuote {\n\tpublic render() {\n\t\treturn (\n\t\t\t<Host class=\"discord-quote-container\">\n\t\t\t\t<div class=\"discord-quote-divider\"></div>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<slot></slot>\n\t\t\t\t</blockquote>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    ".discord-reaction {\n\tborder-radius: 0.5rem;\n\tcursor: pointer;\n\tflex-shrink: 0;\n\tmargin-right: 0.25rem;\n\tmargin-bottom: 0.25rem;\n\tuser-select: none;\n\ttransition: none 0.1s ease;\n\ttransition-property: background-color, border-color;\n\tbackground-color: #2f3136;\n\tborder: 1px solid transparent;\n}\n\n.discord-light-theme .discord-reaction {\n\tbackground-color: #f2f3f5;\n}\n\n.discord-reaction:hover {\n\tbackground-color: #36393f;\n\tborder-color: #fff2;\n}\n\n.discord-light-theme .discord-reaction:not(.discord-reaction-reacted):hover {\n\tbackground-color: white;\n\tborder-color: #0003;\n}\n\n.discord-reaction.discord-reaction-reacted {\n\tbackground-color: rgba(88, 101, 242, 0.15);\n\tborder-color: #5865f2;\n}\n\n.discord-light-theme .discord-reaction.discord-reaction-reacted {\n\tbackground-color: #e7e9fd;\n}\n\n.discord-reaction .discord-reaction-inner {\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 0.125rem 0.375rem;\n}\n\n.discord-reaction img {\n\twidth: 1rem;\n\theight: 1rem;\n\tmargin: 0.125rem 0;\n\tmin-width: auto;\n\tmin-height: auto;\n\tobject-fit: contain;\n\tvertical-align: bottom;\n}\n\n.discord-reaction .discord-reaction-count {\n\tfont-size: 0.875rem;\n\tfont-weight: 500;\n\tmargin-left: 0.375rem;\n\ttext-align: center;\n\tcolor: #b9bbbe;\n}\n\n.discord-light-theme .discord-reaction .discord-reaction-count {\n\tcolor: #4f5660;\n}\n\n.discord-reaction.discord-reaction-reacted .discord-reaction-count {\n\tcolor: #dee0fc;\n}\n\n.discord-light-theme .discord-reaction.discord-reaction-reacted .discord-reaction-count {\n\tcolor: #5865f2;\n}\n",
    "import { Component, ComponentInterface, Element, h, Prop } from '@stencil/core';\nimport clsx from 'clsx';\n\n@Component({\n\ttag: 'discord-reaction',\n\tstyleUrl: 'discord-reaction.css'\n})\nexport class DiscordReaction implements ComponentInterface {\n\t/**\n\t * The DiscordReaction element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The reaction emoji image URL.\n\t */\n\t@Prop()\n\tpublic emoji: string;\n\n\t/**\n\t * The name of the emoji to use as alternative image text.\n\t * @default ':emoji'\n\t */\n\t@Prop()\n\tpublic name = ':emoji:';\n\n\t/**\n\t * The number of people who reacted.\n\t * @default 1\n\t */\n\t@Prop({ mutable: true })\n\tpublic count = 1;\n\n\t/**\n\t * Whether the reaction should show as reacted by the user.\n\t * @default false\n\t */\n\t@Prop()\n\tpublic reacted = false;\n\n\t/**\n\t * Whether the reaction should be reactive.\n\t * @remark When the reaction is interactive left clicking it will add 1 to the counter.\n\t * Whereas when holding the Shift key and left clicking it will decrease the counter.\n\t * The counter cannot go below 1.\n\t * @default false\n\t */\n\t@Prop()\n\tpublic interactive = false;\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<div class={clsx('discord-reaction', { 'discord-reaction-reacted': this.reacted })} onClick={this.handleReactionClick.bind(this)}>\n\t\t\t\t<div class=\"discord-reaction-inner\">\n\t\t\t\t\t<img src={this.emoji} alt={this.name} draggable={false} />\n\t\t\t\t\t<span class=\"discord-reaction-count\">{this.count}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate handleReactionClick(event: MouseEvent) {\n\t\tif (this.interactive) {\n\t\t\tif (event.shiftKey) {\n\t\t\t\tthis.count--;\n\t\t\t} else {\n\t\t\t\tthis.count++;\n\t\t\t}\n\n\t\t\tif (this.count <= 0) {\n\t\t\t\tthis.count = 1;\n\t\t\t}\n\t\t}\n\t}\n}\n",
    ".discord-message .discord-reactions,\n.discord-system-message .discord-reactions {\n\tdisplay: flex;\n\t-webkit-box-flex: 1;\n\t-ms-flex: 1 0 auto;\n\tflex: 1 0 auto;\n\talign-items: center;\n\tflex-wrap: wrap;\n}\n",
    "import { Component, ComponentInterface, h, Host } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-reactions',\n\tstyleUrl: 'discord-reactions.css'\n})\nexport class DiscordReactions implements ComponentInterface {\n\tpublic render() {\n\t\treturn (\n\t\t\t<Host class=\"discord-reactions\">\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function AttachmentReply<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"64\" height=\"64\" viewBox=\"0 0 64 64\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M56 50.6667V13.3333C56 10.4 53.6 8 50.6667 8H13.3333C10.4 8 8 10.4 8 13.3333V50.6667C8 53.6 10.4 56 13.3333 56H50.6667C53.6 56 56 53.6 56 50.6667ZM22.6667 36L29.3333 44.0267L38.6667 32L50.6667 48H13.3333L22.6667 36Z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function CommandReply<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\td=\"M5 3C3.89543 3 3 3.89543 3 5V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V5C21 3.89543 20.1046 3 19 3H5ZM16.8995 8.41419L15.4853 6.99998L7 15.4853L8.41421 16.8995L16.8995 8.41419Z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function ReplyIcon<T>(props: T) {\n\treturn (\n\t\t<svg {...props} width=\"12\" height=\"8\" viewBox=\"0 0 12 8\">\n\t\t\t<path\n\t\t\t\td=\"M0.809739 3.59646L5.12565 0.468433C5.17446 0.431163 5.23323 0.408043 5.2951 0.401763C5.35698 0.395482 5.41943 0.406298 5.4752 0.432954C5.53096 0.45961 5.57776 0.50101 5.61013 0.552343C5.64251 0.603676 5.65914 0.662833 5.6581 0.722939V2.3707C10.3624 2.3707 11.2539 5.52482 11.3991 7.21174C11.4028 7.27916 11.3848 7.34603 11.3474 7.40312C11.3101 7.46021 11.2554 7.50471 11.1908 7.53049C11.1262 7.55626 11.0549 7.56204 10.9868 7.54703C10.9187 7.53201 10.857 7.49695 10.8104 7.44666C8.72224 5.08977 5.6581 5.63359 5.6581 5.63359V7.28135C5.65831 7.34051 5.64141 7.39856 5.60931 7.44894C5.5772 7.49932 5.53117 7.54004 5.4764 7.5665C5.42163 7.59296 5.3603 7.60411 5.29932 7.59869C5.23834 7.59328 5.18014 7.57151 5.13128 7.53585L0.809739 4.40892C0.744492 4.3616 0.691538 4.30026 0.655067 4.22975C0.618596 4.15925 0.599609 4.08151 0.599609 4.00269C0.599609 3.92386 0.618596 3.84612 0.655067 3.77562C0.691538 3.70511 0.744492 3.64377 0.809739 3.59646Z\"\n\t\t\t\tfill=\"currentColor\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    ".discord-replied-message {\n\tcolor: #b9bbbe;\n\tdisplay: flex;\n\tfont-size: 0.875rem;\n\tfont-family: Whitney, 'Source Sans Pro', ui-sans-serif, system-ui, -apple-system, 'system-ui', 'Segoe UI', Roboto, 'Helvetica Neue', Arial,\n\t\tsans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n\n\tpadding-top: 2px;\n\tmargin-left: 56px;\n\tmargin-bottom: 4px;\n\talign-items: center;\n\tline-height: 1.125rem;\n\tposition: relative;\n\twhite-space: pre;\n\tuser-select: none;\n}\n\n.discord-light-theme .discord-replied-message {\n\tcolor: #4f5660;\n}\n\n.discord-compact-mode .discord-replied-message {\n\tmargin-left: 62px;\n\tmargin-bottom: 0;\n}\n\n.discord-replied-message:before {\n\tcontent: '';\n\tdisplay: block;\n\tposition: absolute;\n\ttop: 50%;\n\tright: 100%;\n\tbottom: 0;\n\tleft: -36px;\n\tmargin-right: 4px;\n\tmargin-top: -1px;\n\tmargin-left: -1px;\n\tmargin-bottom: -2px;\n\tborder-left: 2px solid #4f545c;\n\tborder-bottom: 0 solid #4f545c;\n\tborder-right: 0 solid #4f545c;\n\tborder-top: 2px solid #4f545c;\n\tborder-top-left-radius: 6px;\n}\n\n.discord-light-theme .discord-replied-message:before {\n\tborder-color: #747f8d;\n}\n\n.discord-replied-message .discord-replied-message-avatar,\n.discord-replied-message .discord-reply-badge {\n\t-webkit-box-flex: 0;\n\t-ms-flex: 0 0 auto;\n\tflex: 0 0 auto;\n\twidth: 16px;\n\theight: 16px;\n\tborder-radius: 50%;\n\tuser-select: none;\n\tmargin-right: 0.25rem;\n}\n\n.discord-replied-message .discord-reply-badge {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tcolor: #b9bbbe;\n\tbackground: #202225;\n}\n\n.discord-light-theme .discord-replied-message .discord-reply-badge {\n\tcolor: #4f5660;\n\tbackground: #e3e5e8;\n}\n\n.discord-replied-message .discord-application-tag {\n\tbackground-color: hsl(235, 85.6%, 64.7%);\n\tcolor: #fff;\n\tfont-size: 0.625rem;\n\tmargin-right: 0.25rem;\n\tline-height: 100%;\n\ttext-transform: uppercase;\n\t/* Use flex layout to ensure both verified icon and \"BOT\" text are aligned to center */\n\tdisplay: flex;\n\talign-items: center;\n\t/* Styling taken through Inspect Element on Discord client for Windows */\n\theight: 0.9375rem;\n\tpadding: 0 0.275rem;\n\tmargin-top: 0.075em;\n\tborder-radius: 0.1875rem;\n}\n\n.discord-replied-message .discord-application-tag .discord-application-tag-verified {\n\twidth: 0.9375rem;\n\theight: 0.9375rem;\n\tmargin-left: -0.1rem;\n}\n\n.discord-replied-message .discord-application-tag.discord-application-tag-op {\n\tbackground-color: #c9cdfb;\n\tcolor: #4752c4;\n\tborder-radius: 0.4rem;\n}\n\n.discord-replied-message .discord-replied-message-username {\n\tflex-shrink: 0;\n\tfont-size: inherit;\n\tline-height: inherit;\n\tmargin-right: 0.25rem;\n\topacity: 0.64;\n\tfont-weight: 500;\n\tcolor: #fff;\n}\n\n.discord-replied-message .discord-replied-message-content {\n\tcolor: inherit;\n\tfont-size: inherit;\n\tline-height: inherit;\n\twhite-space: pre;\n\ttext-overflow: ellipsis;\n\tuser-select: none;\n\tcursor: pointer;\n}\n\n.discord-replied-message .discord-replied-message-content:hover {\n\tcolor: #fff;\n}\n\n.discord-light-theme .discord-replied-message .discord-replied-message-content:hover {\n\tcolor: #000;\n}\n\n.discord-replied-message .discord-replied-message-content .discord-message-edited {\n\tmargin-left: 0.25rem;\n}\n\n.discord-replied-message .discord-replied-message-content-icon {\n\t-webkit-box-flex: 0;\n\t-ms-flex: 0 0 auto;\n\tflex: 0 0 auto;\n\twidth: 20px;\n\theight: 20px;\n\tmargin-left: 4px;\n}\n\n@import '../author-info/author-info.css';\n",
    "import { Component, ComponentInterface, Element, h, Host, Prop } from '@stencil/core';\nimport Fragment from '../../Fragment';\nimport { avatars, Profile, profiles } from '../../options';\nimport AttachmentReply from '../svgs/attachment-reply';\nimport CommandReply from '../svgs/command-reply';\nimport ReplyIcon from '../svgs/reply-icon';\nimport VerifiedTick from '../svgs/verified-tick';\n\n@Component({\n\ttag: 'discord-reply',\n\tstyleUrl: 'discord-reply.css'\n})\nexport class DiscordReply implements ComponentInterface {\n\t/**\n\t * The DiscordReply element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The id of the profile data to use.\n\t */\n\t@Prop()\n\tpublic profile: string;\n\n\t/**\n\t * The message author's username.\n\t * @default 'User'\n\t */\n\t@Prop()\n\tpublic author = 'User';\n\n\t/**\n\t * The message author's avatar. Can be an avatar shortcut, relative path, or external link.\n\t */\n\t@Prop()\n\tpublic avatar: string;\n\n\t/**\n\t * Whether the message author is a bot or not.\n\t * Only works if `server` is `false` or `undefined`.\n\t */\n\t@Prop()\n\tpublic bot = false;\n\n\t/**\n\t * Whether the message author is a server crosspost webhook or not.\n\t * Only works if `bot` is `false` or `undefined`.\n\t */\n\t@Prop()\n\tpublic server = false;\n\n\t/**\n\t * Whether the author is the original poster.\n\t */\n\t@Prop()\n\tpublic op = false;\n\n\t/**\n\t * Whether the bot is verified or not.\n\t * Only works if `bot` is `true`\n\t */\n\t@Prop()\n\tpublic verified = false;\n\n\t/**\n\t * Whether the message has been edited or not.\n\t */\n\t@Prop()\n\tpublic edited = false;\n\n\t/**\n\t * The message author's primary role color. Can be any [CSS color value](https://www.w3schools.com/cssref/css_colors_legal.asp).\n\t */\n\t@Prop()\n\tpublic roleColor: string;\n\n\t/**\n\t * Whether the referenced message is from a response of a slash command.\n\t */\n\t@Prop()\n\tpublic command = false;\n\n\t/**\n\t * Whether the referenced message contains attachments.\n\t */\n\t@Prop()\n\tpublic attachment = false;\n\n\t/**\n\t * Whether this reply pings the original message sender, prepending an \"@\" on the author's username.\n\t */\n\t@Prop()\n\tpublic mentions = false;\n\n\tpublic render() {\n\t\tconst parent: HTMLDiscordMessageElement = this.el.parentElement as HTMLDiscordMessageElement;\n\n\t\tif (parent.tagName.toLowerCase() !== 'discord-message') {\n\t\t\tthrow new Error('All <discord-reply> components must be direct children of <discord-message>.');\n\t\t}\n\n\t\tconst resolveAvatar = (avatar: string): string => avatars[avatar] ?? avatar ?? avatars.default;\n\n\t\tconst defaultData: Profile = {\n\t\t\tauthor: this.author,\n\t\t\tbot: this.bot,\n\t\t\tverified: this.verified,\n\t\t\top: this.op,\n\t\t\tserver: this.server,\n\t\t\troleColor: this.roleColor\n\t\t};\n\t\tconst profileData: Profile = Reflect.get(profiles, this.profile) ?? {};\n\t\tconst profile: Profile = { ...defaultData, ...profileData, ...{ avatar: resolveAvatar(profileData.avatar ?? this.avatar) } };\n\n\t\tconst messageParent: HTMLDiscordMessagesElement = parent.parentElement as HTMLDiscordMessagesElement;\n\n\t\treturn (\n\t\t\t<Host class=\"discord-replied-message\">\n\t\t\t\t{messageParent.compactMode ? (\n\t\t\t\t\t<div class=\"discord-reply-badge\">\n\t\t\t\t\t\t<ReplyIcon />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<img class=\"discord-replied-message-avatar\" src={profile.avatar} alt={profile.author} />\n\t\t\t\t)}\n\t\t\t\t{\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t{profile.bot && !profile.server && (\n\t\t\t\t\t\t\t<span class=\"discord-application-tag\">\n\t\t\t\t\t\t\t\t{profile.verified && <VerifiedTick />}\n\t\t\t\t\t\t\t\tBot\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{profile.server && !profile.bot && <span class=\"discord-application-tag\">Server</span>}\n\t\t\t\t\t\t{profile.op && <span class=\"discord-application-tag discord-application-tag-op\">OP</span>}\n\t\t\t\t\t</Fragment>\n\t\t\t\t}\n\t\t\t\t<span class=\"discord-replied-message-username\" style={{ color: profile.roleColor ?? '' }}>\n\t\t\t\t\t{this.mentions && '@'}\n\t\t\t\t\t{profile.author}\n\t\t\t\t</span>\n\t\t\t\t<div class=\"discord-replied-message-content\">\n\t\t\t\t\t<slot />\n\t\t\t\t\t{this.edited ? <span class=\"discord-message-edited\">(edited)</span> : ''}\n\t\t\t\t</div>\n\t\t\t\t{this.command ? (\n\t\t\t\t\t<CommandReply class=\"discord-replied-message-content-icon\" />\n\t\t\t\t) : (\n\t\t\t\t\tthis.attachment && <AttachmentReply class=\"discord-replied-message-content-icon\" />\n\t\t\t\t)}\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    ".discord-message .discord-message-body .discord-spoiler {\n\tbackground-color: #202225;\n\tcolor: transparent;\n\tcursor: pointer;\n}\n\n.discord-light-theme .discord-message .discord-message-body .discord-spoiler {\n\tbackground-color: #b9bbbe;\n}\n\n.discord-message .discord-message-body .discord-spoiler:hover {\n\tbackground-color: rgba(32, 34, 37, 0.8);\n}\n\n.discord-light-theme .discord-message .discord-message-body .discord-spoiler:hover {\n\tbackground-color: rgba(185, 187, 190, 0.8);\n}\n\n.discord-message .discord-message-body .discord-spoiler:active {\n\tcolor: inherit;\n\tbackground-color: hsla(0, 0%, 100%, 0.1);\n}\n\n.discord-light-theme .discord-message .discord-message-body .discord-spoiler:active {\n\tbackground-color: rgba(0, 0, 0, 0.1);\n}\n",
    "import { Component, h, Host } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-spoiler',\n\tstyleUrl: 'discord-spoiler.css'\n})\nexport class DiscordSpoiler {\n\tpublic render() {\n\t\treturn (\n\t\t\t<Host class=\"discord-spoiler\">\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function Boost<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"24\" height=\"24\" viewBox=\"0 0 8 12\">\n\t\t\t<path d=\"M4 0L0 4V8L4 12L8 8V4L4 0ZM7 7.59L4 10.59L1 7.59V4.41L4 1.41L7 4.41V7.59Z\" fill=\"currentColor\" />\n\t\t\t<path d=\"M2 4.83V7.17L4 9.17L6 7.17V4.83L4 2.83L2 4.83Z\" fill=\"currentColor\" />\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function DMCall<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n\t\t\t<path\n\t\t\t\tfill=\"#3ba55c\"\n\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\td=\"M17.7163041 15.36645368c-.0190957.02699568-1.9039523 2.6680735-2.9957762 2.63320406-3.0676659-.09785935-6.6733809-3.07188394-9.15694343-5.548738C3.08002193 9.9740657.09772497 6.3791404 0 3.3061316v-.024746C0 2.2060575 2.61386252.3152347 2.64082114.2972376c.7110335-.4971705 1.4917101-.3149497 1.80959713.1372281.19320342.2744561 2.19712724 3.2811005 2.42290565 3.6489167.09884826.1608492.14714912.3554431.14714912.5702838 0 .2744561-.07975258.5770327-.23701117.8751101-.1527655.2902036-.65262318 1.1664385-.89862055 1.594995.2673396.3768148.94804468 1.26429792 2.351016 2.66357424 1.39173858 1.39027775 2.28923588 2.07641807 2.67002628 2.34187563.4302146-.2452108 1.3086162-.74238132 1.5972981-.89423205.5447887-.28682915 1.0907006-.31944893 1.4568885-.08661115.3459689.2182151 3.3383754 2.21027167 3.6225641 2.41611376.2695862.19234426.4144887.5399137.4144887.91672846 0 .2969525-.089862.61190215-.2808189.88523346\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function DMEdit<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n\t\t\t<g fill=\"none\" fill-rule=\"evenodd\">\n\t\t\t\t<path\n\t\t\t\t\tfill=\"#99AAB5\"\n\t\t\t\t\td=\"M0 14.25V18h3.75L14.81 6.94l-3.75-3.75L0 14.25zM17.71 4.04c.39-.39.39-1.02 0-1.41L15.37.29c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n\t\t\t\t/>\n\t\t\t\t<path d=\"M0 0h18v18H0\" />\n\t\t\t</g>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function DMMissedCall<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n\t\t\t<g fill=\"none\" fill-rule=\"evenodd\">\n\t\t\t\t<path d=\"M0 0h18v18H0z\" />\n\t\t\t\t<path\n\t\t\t\t\tfill=\"#99AAB5\"\n\t\t\t\t\td=\"M3.2765961.00034226C6.344262.0982016 9.949977 3.0722262 12.43353953 5.54908026c2.48356254 2.47685405 5.4658595 6.07177934 5.56358447 9.14478814 0 1.1000741-2.61386252 2.9908969-2.64082114 3.008894-.7110335.4971705-1.4917101.3149497-1.80959713-.1372281-.19320342-.2744561-2.19712724-3.2811005-2.42290565-3.6489167-.09884826-.1608492-.14714912-.3554431-.14714912-.5702838 0-.2744561.07975258-.5770327.23701117-.8751101.1527655-.2902036.65262318-1.1664385.89862055-1.594995-.2673396-.3768148-.94804468-1.26429792-2.351016-2.66357424C8.3695281 6.8223767 7.4720308 6.1362364 7.0912404 5.87077883c-.4302146.2452108-1.3086162.74238132-1.5972981.89423205-.5447887.28682915-1.0907006.31944893-1.4568885.08661115C3.6910849 6.63340693.6986784 4.64135036.4144897 4.43550827.1449035 4.243164.000001 3.89559457.000001 3.5187798c0-.29695252.089862-.61190217.2808189-.88523348.0190957-.02699568 1.9039523-2.6680735 2.9957762-2.63320406z\"\n\t\t\t\t/>\n\t\t\t</g>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function Pin<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" height=\"18\" viewBox=\"0 0 18 18\" width=\"18\">\n\t\t\t<path\n\t\t\t\td=\"m16.908 8.39684-8.29587-8.295827-1.18584 1.184157 1.18584 1.18584-4.14834 4.1475v.00167l-1.18583-1.18583-1.185 1.18583 3.55583 3.55502-4.740831 4.74 1.185001 1.185 4.74083-4.74 3.55581 3.555 1.185-1.185-1.185-1.185 4.1475-4.14836h.0009l1.185 1.185z\"\n\t\t\t\tfill=\"#b9bbbe\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function SystemAlert<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\n\t\t\t<path\n\t\t\t\td=\"M10 0C4.486 0 0 4.486 0 10C0 15.515 4.486 20 10 20C15.514 20 20 15.515 20 10C20 4.486 15.514 0 10 0ZM9 4H11V11H9V4ZM10 15.25C9.31 15.25 8.75 14.691 8.75 14C8.75 13.31 9.31 12.75 10 12.75C10.69 12.75 11.25 13.31 11.25 14C11.25 14.691 10.69 15.25 10 15.25Z\"\n\t\t\t\tfill-rule=\"evenodd\"\n\t\t\t\tclip-rule=\"evenodd\"\n\t\t\t\tfill=\"currentColor\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function SystemError<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n\t\t\t<path\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\td=\"M18.4 4L12 10.4L5.6 4L4 5.6L10.4 12L4 18.4L5.6 20L12 13.6L18.4 20L20 18.4L13.6 12L20 5.6L18.4 4Z\"\n\t\t\t\tfill=\"#ed4245\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function Thread<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M5.43309 21C5.35842 21 5.30189 20.9325 5.31494 20.859L5.99991 17H2.14274C2.06819 17 2.01168 16.9327 2.02453 16.8593L2.33253 15.0993C2.34258 15.0419 2.39244 15 2.45074 15H6.34991L7.40991 9H3.55274C3.47819 9 3.42168 8.93274 3.43453 8.85931L3.74253 7.09931C3.75258 7.04189 3.80244 7 3.86074 7H7.75991L8.45234 3.09903C8.46251 3.04174 8.51231 3 8.57049 3H10.3267C10.4014 3 10.4579 3.06746 10.4449 3.14097L9.75991 7H15.7599L16.4523 3.09903C16.4625 3.04174 16.5123 3 16.5705 3H18.3267C18.4014 3 18.4579 3.06746 18.4449 3.14097L17.7599 7H21.6171C21.6916 7 21.7481 7.06725 21.7353 7.14069L21.4273 8.90069C21.4172 8.95811 21.3674 9 21.3091 9H17.4099L17.0495 11.04H15.05L15.4104 9H9.41035L8.35035 15H10.5599V17H7.99991L7.30749 20.901C7.29732 20.9583 7.24752 21 7.18934 21H5.43309Z\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M13.4399 12.96C12.9097 12.96 12.4799 13.3898 12.4799 13.92V20.2213C12.4799 20.7515 12.9097 21.1813 13.4399 21.1813H14.3999C14.5325 21.1813 14.6399 21.2887 14.6399 21.4213V23.4597C14.6399 23.6677 14.8865 23.7773 15.0408 23.6378L17.4858 21.4289C17.6622 21.2695 17.8916 21.1813 18.1294 21.1813H22.5599C23.0901 21.1813 23.5199 20.7515 23.5199 20.2213V13.92C23.5199 13.3898 23.0901 12.96 22.5599 12.96H13.4399Z\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function UserJoin<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n\t\t\t<g fill=\"none\" fill-rule=\"evenodd\">\n\t\t\t\t<path d=\"M18 0H0v18h18z\" />\n\t\t\t\t<path fill=\"#3ba55c\" d=\"M0 8h14.2l-3.6-3.6L12 3l6 6-6 6-1.4-1.4 3.6-3.6H0\" />\n\t\t\t</g>\n\t\t</svg>\n\t);\n}\n",
    "import { h } from '@stencil/core';\n\nexport default function UserLeave<T>(props: T) {\n\treturn (\n\t\t<svg {...props} aria-hidden=\"false\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\n\t\t\t<g fill=\"none\" fill-rule=\"evenodd\" stroke=\"none\" stroke-width=\"1\">\n\t\t\t\t<path d=\"M18 0H0v18h18z\" />\n\t\t\t\t<path fill=\"#ed4245\" d=\"M3.8 8l3.6-3.6L6 3 0 9l6 6 1.4-1.4L3.8 10H18V8\" />\n\t\t\t</g>\n\t\t</svg>\n\t);\n}\n",
    ".discord-system-message {\n\tcolor: #8e9297;\n\tdisplay: flex;\n\tfont-weight: 400;\n\tfont-size: 1rem;\n\tfont-family: Whitney, 'Source Sans Pro', ui-sans-serif, system-ui, -apple-system, 'system-ui', 'Segoe UI', Roboto, 'Helvetica Neue', Arial,\n\t\tsans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n\tpadding: 0px 1em;\n\n\tposition: relative;\n\tword-wrap: break-word;\n\t-webkit-user-select: text;\n\t-moz-user-select: text;\n\t-ms-user-select: text;\n\tuser-select: text;\n\t-webkit-box-flex: 0;\n\t-ms-flex: 0 0 auto;\n\tflex: 0 0 auto;\n\tpadding-right: 0;\n\tmin-height: 1.375rem;\n\tpadding-right: 48px !important;\n\tmargin-top: 1.0625rem;\n}\n\n.discord-light-theme .discord-system-message {\n\tcolor: #2e3338;\n\tborder-color: #eceeef;\n}\n\n.discord-system-message.discord-channel-name-change {\n\tcolor: #fff;\n}\n\n.discord-light-theme .discord-system-message.discord-channel-name-change {\n\tcolor: #060607;\n}\n\n.discord-system-message.discord-boost-system-message svg {\n\tcolor: #ff73fa;\n}\n\n.discord-system-message.discord-alert-system-message svg {\n\tcolor: #faa81a;\n}\n\n.discord-system-message.discord-error-system-message svg {\n\tcolor: #faa81a;\n}\n\n.discord-system-message:first-child {\n\tmargin-top: 0.5rem;\n}\n\n.discord-system-message:last-child {\n\tmargin-bottom: 0.5rem;\n\tborder-bottom-width: 0;\n}\n\n.discord-system-message .discord-message-icon {\n\tmargin-right: 16px;\n\tmargin-top: 5px;\n\tmin-width: 40px;\n\tdisplay: flex;\n\talign-items: flex-start;\n\tjustify-content: center;\n}\n\n.discord-system-message .discord-message-icon svg {\n\twidth: 16px;\n\theight: 16px;\n}\n\n.discord-system-message .discord-message-timestamp {\n\tcolor: #72767d;\n\tfont-size: 12px;\n\tmargin-left: 3px;\n}\n\n.discord-light-theme .discord-system-message .discord-message-timestamp {\n\tcolor: #747f8d;\n}\n\n.discord-system-message .discord-message-system-edited {\n\tcolor: #72767d;\n\tfont-size: 10px;\n}\n\n.discord-light-theme .discord-system-message .discord-message-edited {\n\tcolor: #99aab5;\n}\n\n.discord-system-message .discord-message-content {\n\twidth: 100%;\n\tline-height: 160%;\n\tfont-weight: normal;\n\tpadding-top: 2px;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.discord-system-message .discord-message-content i {\n\tfont-style: normal;\n\tcursor: pointer;\n\tcolor: white;\n\tfont-weight: 500;\n}\n\n.discord-light-theme .discord-system-message .discord-message-content i {\n\tcolor: #060607;\n}\n\n.discord-system-message .discord-message-content i:hover {\n\ttext-decoration: underline;\n}\n\n.discord-system-message:hover {\n\tbackground-color: rgba(4, 4, 5, 0.07);\n}\n\n.discord-light-theme .discord-system-message:hover {\n\tbackground-color: rgba(6, 6, 7, 0.02);\n}\n\n.discord-system-message.discord-system-message-has-thread:after {\n\twidth: 2rem;\n\tleft: 2.2rem;\n\ttop: 1.75rem;\n\tborder-left: 2px solid #4f545c;\n\tborder-bottom: 2px solid #4f545c;\n\tborder-bottom-left-radius: 8px;\n\tbottom: 29px;\n\tcontent: '';\n\tposition: absolute;\n}\n\n.discord-light-theme .discord-system-message.discord-system-message-has-thread:after {\n\tborder-color: #747f8d;\n}\n\n@import '../author-info/author-info.css';\n",
    "import { Component, ComponentInterface, Element, h, Host, Prop, Watch } from '@stencil/core';\nimport clsx from 'clsx';\nimport { DiscordTimestamp, handleTimestamp } from '../../util';\nimport Boost from '../svgs/boost';\nimport DMCall from '../svgs/dm-call';\nimport DMEdit from '../svgs/dm-edit';\nimport DMMissedCall from '../svgs/dm-missed-call';\nimport Pin from '../svgs/pin';\nimport SystemAlert from '../svgs/system-alert';\nimport SystemError from '../svgs/system-error';\nimport Thread from '../svgs/thread';\nimport UserJoin from '../svgs/user-join';\nimport UserLeave from '../svgs/user-leave';\n\n@Component({\n\ttag: 'discord-system-message',\n\tstyleUrl: 'discord-system-message.css'\n})\nexport class DiscordSystemMessage implements ComponentInterface {\n\t/**\n\t * The DiscordSystemMessage element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The timestamp to use for the message date.\n\t */\n\t@Prop({ mutable: true, reflect: true })\n\tpublic timestamp: DiscordTimestamp = new Date();\n\n\t/**\n\t * The type of system message this is, this will change the icon shown.\n\t * Valid values: `join`, `leave`, `call`, `missed-call`, `boost`, `edit`, `thread`, `pin`, `alert`, and `error`.\n\t */\n\t@Prop()\n\tpublic type: 'join' | 'leave' | 'call' | 'missed-call' | 'boost' | 'edit' | 'thread' | 'pin' | 'alert' | 'error' = 'join';\n\n\t/**\n\t * Whether this message is to show channel name changes, used to match Discord's style.\n\t */\n\t@Prop()\n\tpublic channelName = false;\n\n\t@Watch('type')\n\tpublic handleType(value: string) {\n\t\tif (typeof value !== 'string') {\n\t\t\tthrow new TypeError('DiscordSystemMessage `type` prop must be a string.');\n\t\t} else if (!['join', 'leave', 'call', 'missed-call', 'boost', 'edit', 'thread', 'pin', 'alert', 'error'].includes(value)) {\n\t\t\tthrow new RangeError(\n\t\t\t\t\"DiscordSystemMessage `type` prop must be one of: 'join', 'leave', 'call', 'missed-call', 'boost', 'edit', 'pin', 'thread' 'alert', 'error'\"\n\t\t\t);\n\t\t}\n\t}\n\n\t@Watch('timestamp')\n\tpublic updateTimestamp(value: DiscordTimestamp): string | null {\n\t\treturn handleTimestamp(value);\n\t}\n\n\tpublic componentWillRender() {\n\t\tthis.timestamp = handleTimestamp(this.timestamp);\n\t}\n\n\tpublic render() {\n\t\tconst parent: HTMLDiscordMessagesElement = this.el.parentElement as HTMLDiscordMessagesElement;\n\n\t\tif (parent.tagName.toLowerCase() !== 'discord-messages') {\n\t\t\tthrow new Error('All <discord-system-message> components must be direct children of <discord-messages>.');\n\t\t}\n\n\t\tlet icon = '';\n\n\t\tswitch (this.type) {\n\t\t\tcase 'join':\n\t\t\t\ticon = <UserJoin />;\n\t\t\t\tbreak;\n\t\t\tcase 'leave':\n\t\t\t\ticon = <UserLeave />;\n\t\t\t\tbreak;\n\t\t\tcase 'call':\n\t\t\t\ticon = <DMCall />;\n\t\t\t\tbreak;\n\t\t\tcase 'missed-call':\n\t\t\t\ticon = <DMMissedCall />;\n\t\t\t\tbreak;\n\t\t\tcase 'edit':\n\t\t\t\ticon = <DMEdit />;\n\t\t\t\tbreak;\n\t\t\tcase 'boost':\n\t\t\t\ticon = <Boost />;\n\t\t\t\tbreak;\n\t\t\tcase 'thread':\n\t\t\t\ticon = <Thread />;\n\t\t\t\tbreak;\n\t\t\tcase 'alert':\n\t\t\t\ticon = <SystemAlert />;\n\t\t\t\tbreak;\n\t\t\tcase 'error':\n\t\t\t\ticon = <SystemError />;\n\t\t\t\tbreak;\n\t\t\tcase 'pin':\n\t\t\t\ticon = <Pin />;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst hasThread: boolean =\n\t\t\t// @ts-expect-error ts doesn't understand this\n\t\t\tArray.from(this.el.children).some((child: HTMLDiscordThreadElement): boolean => {\n\t\t\t\treturn child.tagName.toLowerCase() === 'discord-thread';\n\t\t\t});\n\n\t\treturn (\n\t\t\t<Host\n\t\t\t\tclass={clsx('discord-system-message', `discord-${this.type}-system-message`, {\n\t\t\t\t\t'discord-system-message-has-thread': hasThread,\n\t\t\t\t\t'discord-channel-name-change': this.channelName\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<div class=\"discord-message-icon\">{icon}</div>\n\t\t\t\t<div class=\"discord-message-content\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t\t<span class=\"discord-message-timestamp\">{this.timestamp}</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<slot name=\"reactions\"></slot>\n\t\t\t\t\t<slot name=\"thread\"></slot>\n\t\t\t\t</div>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    ".discord-tenor-video {\n\tcolor: #dcddde;\n\tdisplay: flex;\n\tfont-size: 13px;\n\tline-height: 150%;\n\tmargin-bottom: 8px;\n\tmargin-top: 8px;\n}\n\n.discord-tenor-video .discord-tenor-video-wrapper {\n\tdisplay: block;\n\tposition: relative;\n\t-webkit-user-select: text;\n\t-moz-user-select: text;\n\t-ms-user-select: text;\n\tuser-select: text;\n\toverflow: hidden;\n\tborder-radius: 4px;\n}\n\n.discord-tenor-video .discord-tenor-video-wrapper video {\n\t-webkit-box-align: center;\n\t-webkit-box-pack: center;\n\talign-items: center;\n\tborder-radius: 0;\n\tcursor: pointer;\n\tdisplay: flex;\n\theight: 100%;\n\tjustify-content: center;\n\tmax-height: 100%;\n\twidth: 100%;\n\tleft: 0px;\n\ttop: 0px;\n}\n",
    "import { Component, ComponentInterface, Element, h, Host, Prop } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-tenor-video',\n\tstyleUrl: 'discord-tenor-video.css'\n})\nexport class DiscordTenorVideo implements ComponentInterface {\n\t/**\n\t * The DiscordTenorVideo element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The URL for the video\n\t */\n\t@Prop()\n\tpublic url: string;\n\n\t/**\n\t * The height of the video in pixels\n\t */\n\t@Prop()\n\tpublic height: number;\n\n\t/**\n\t * The width of the video in pixels\n\t */\n\t@Prop()\n\tpublic width: number;\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<Host class=\"discord-tenor-video\">\n\t\t\t\t<div class=\"discord-tenor-video-wrapper\" style={{ height: `${this.height}px`, width: `${this.width}px` }}>\n\t\t\t\t\t<video muted preload=\"auto\" autoplay loop src={this.url} height={this.height} width={this.width}></video>\n\t\t\t\t</div>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    ".discord-thread {\n\tbackground-color: #2f3136;\n\tborder-radius: 4px;\n\tcursor: pointer;\n\tmargin-top: 8px;\n\tmax-width: 480px;\n\tmin-width: 0;\n\tpadding: 8px;\n\tdisplay: inline-flex;\n\twidth: fit-content;\n\tflex-direction: column;\n}\n\n.discord-light-theme .discord-thread {\n\tbackground-color: #f2f3f5;\n}\n\n.discord-thread .discord-thread-top {\n\tdisplay: flex;\n}\n\n.discord-thread .discord-thread-bottom {\n\tfont-size: 0.875rem;\n\tline-height: 1.125rem;\n\talign-items: center;\n\tcolor: #b9bbbe;\n\tdisplay: flex;\n\tmargin-top: 2px;\n\twhite-space: nowrap;\n}\n\n.discord-light-theme .discord-thread-bottom {\n\tcolor: #4f5660;\n}\n\n.discord-thread .discord-thread-name {\n\tfont-size: 0.875rem;\n\tfont-weight: 600;\n\tline-height: 1.125rem;\n\tcolor: white;\n\tmargin-right: 8px;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n}\n\n.discord-light-theme .discord-thread-name {\n\tcolor: #060607;\n}\n\n.discord-thread .discord-thread-cta {\n\tcolor: #00aff4;\n\tflex-shrink: 0;\n\tfont-size: 0.875rem;\n\tfont-weight: 600;\n\tline-height: 1.125rem;\n}\n\n.discord-thread:hover .discord-thread-cta {\n\ttext-decoration: underline;\n}\n",
    "import { Component, ComponentInterface, Element, h, Host, Prop } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-thread',\n\tstyleUrl: 'discord-thread.css'\n})\nexport class DiscordThread implements ComponentInterface {\n\t/**\n\t * The DiscordThread element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The name of the thread.\n\t */\n\t@Prop()\n\tpublic name = 'Thread';\n\n\t/**\n\t * The the text within the call to action text. (i.e. 'See Thread' or 'x Messages')\n\t */\n\t@Prop()\n\tpublic cta = 'See Thread';\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<Host class=\"discord-thread\">\n\t\t\t\t<div class=\"discord-thread-top\">\n\t\t\t\t\t<span class=\"discord-thread-name\">{this.name}</span>\n\t\t\t\t\t<span class=\"discord-thread-cta\" aria-hidden=\"true\">\n\t\t\t\t\t\t{this.cta} ›\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<span class=\"discord-thread-bottom\">\n\t\t\t\t\t<slot></slot>\n\t\t\t\t</span>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    ".discord-thread-message {\n\theight: 18px;\n\tmin-width: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tfont-size: 0.875rem;\n\tline-height: 1.125rem;\n}\n\n.discord-thread-message .discord-thread-message-avatar {\n\tmargin-right: 8px;\n\tflex: 0 0 auto;\n\twidth: 16px;\n\theight: 16px;\n\tborder-radius: 50%;\n\tuser-select: none;\n}\n\n.discord-thread-message .discord-thread-message-username {\n\tflex-shrink: 0;\n\tfont-size: inherit;\n\tline-height: inherit;\n\tmargin-right: 0.25rem;\n\topacity: 0.64;\n\tcolor: white;\n\tdisplay: inline;\n\tvertical-align: baseline;\n\tposition: relative;\n\toverflow: hidden;\n}\n\n.discord-light-theme .discord-thread-message .discord-thread-message-username {\n\tcolor: #060607;\n}\n\n.discord-thread-message .discord-application-tag {\n\tbackground-color: #5865f2;\n\tcolor: #fff;\n\tfont-size: 0.65em;\n\tmargin-right: 5px;\n\tborder-radius: 3px;\n\tline-height: 100%;\n\ttext-transform: uppercase;\n\tdisplay: flex;\n\talign-items: center;\n\theight: 0.9375rem;\n\tpadding: 0 0.275rem;\n\tmargin-top: 0.075em;\n\tborder-radius: 0.1875rem;\n}\n\n.discord-thread-message .discord-application-tag-verified {\n\tdisplay: inline-block;\n\twidth: 0.9375rem;\n\theight: 0.9375rem;\n\tmargin-left: -0.25rem;\n}\n\n.discord-thread-message .discord-thread-message-content {\n\tdisplay: flex;\n\talign-items: baseline;\n}\n\n.discord-thread-message .discord-message-edited {\n\tcolor: #72767d;\n\tfont-size: 10px;\n\tmargin-left: 5px;\n}\n\n.discord-thread-message .discord-thread-message-timestamp {\n\tcolor: #72767d;\n\tflex-shrink: 0;\n\tmargin-left: 8px;\n\tfont-size: 0.875rem;\n\tline-height: 1.125rem;\n}\n\n.discord-light-theme .discord-thread-message .discord-thread-message-timestamp,\n.discord-light-theme .discord-thread-message .discord-message-edited {\n\tcolor: #747f8d;\n}\n",
    "import { Component, ComponentInterface, Element, h, Host, Prop } from '@stencil/core';\nimport Fragment from '../../Fragment';\nimport { avatars, Profile, profiles } from '../../options';\nimport VerifiedTick from '../svgs/verified-tick';\n\n@Component({\n\ttag: 'discord-thread-message',\n\tstyleUrl: 'discord-thread-message.css'\n})\nexport class DiscordThreadMessage implements ComponentInterface {\n\t/**\n\t * The DiscordThreadMessage element.\n\t */\n\t@Element()\n\tpublic el: HTMLElement;\n\n\t/**\n\t * The id of the profile data to use.\n\t */\n\t@Prop()\n\tpublic profile: string;\n\n\t/**\n\t * The message author's username.\n\t * @default 'User'\n\t */\n\t@Prop()\n\tpublic author = 'User';\n\n\t/**\n\t * The message author's avatar. Can be an avatar shortcut, relative path, or external link.\n\t */\n\t@Prop()\n\tpublic avatar: string;\n\n\t/**\n\t * Whether the message author is a bot or not.\n\t * Only works if `server` is `false` or `undefined`.\n\t */\n\t@Prop()\n\tpublic bot = false;\n\n\t/**\n\t * Whether the message author is a server crosspost webhook or not.\n\t * Only works if `bot` is `false` or `undefined`.\n\t */\n\t@Prop()\n\tpublic server = false;\n\n\t/**\n\t * Whether the bot is verified or not.\n\t * Only works if `bot` is `true`\n\t */\n\t@Prop()\n\tpublic verified = false;\n\n\t/**\n\t * Whether the message has been edited or not.\n\t */\n\t@Prop()\n\tpublic edited = false;\n\n\t/**\n\t * The message author's primary role color. Can be any [CSS color value](https://www.w3schools.com/cssref/css_colors_legal.asp).\n\t */\n\t@Prop()\n\tpublic roleColor: string;\n\n\t/**\n\t * The relative timestamp of the message.\n\t */\n\t@Prop()\n\tpublic relativeTimestamp = '1m ago';\n\n\tpublic render() {\n\t\tconst resolveAvatar = (avatar: string): string => avatars[avatar] ?? avatar ?? avatars.default;\n\n\t\tconst defaultData: Profile = { author: this.author, bot: this.bot, verified: this.verified, server: this.server, roleColor: this.roleColor };\n\t\tconst profileData: Profile = Reflect.get(profiles, this.profile) ?? {};\n\t\tconst profile: Profile = { ...defaultData, ...profileData, ...{ avatar: resolveAvatar(profileData.avatar ?? this.avatar) } };\n\n\t\treturn (\n\t\t\t<Host class=\"discord-thread-message\">\n\t\t\t\t<img src={profile.avatar} class=\"discord-thread-message-avatar\" alt={profile.author} />\n\t\t\t\t<Fragment>\n\t\t\t\t\t{profile.bot && !profile.server && (\n\t\t\t\t\t\t<span class=\"discord-application-tag\">\n\t\t\t\t\t\t\t{profile.verified && <VerifiedTick />}\n\t\t\t\t\t\t\tBot\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t{profile.server && !profile.bot && <span class=\"discord-application-tag\">Server</span>}\n\t\t\t\t</Fragment>\n\t\t\t\t<span class=\"discord-thread-message-username\" style={{ color: profile.roleColor }}>\n\t\t\t\t\t{profile.author}\n\t\t\t\t</span>\n\t\t\t\t<div class=\"discord-thread-message-content\">\n\t\t\t\t\t<slot />\n\t\t\t\t\t{this.edited ? <span class=\"discord-message-edited\">(edited)</span> : ''}\n\t\t\t\t</div>\n\t\t\t\t<span class=\"discord-thread-message-timestamp\">{this.relativeTimestamp}</span>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    ".discord-time {\n\tbackground-color: #ffffff0f;\n\tborder-radius: 3px;\n\tpadding: 0 2px;\n}\n",
    "import { Component, h, Host } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-time',\n\tstyleUrl: 'discord-time.css'\n})\nexport class DiscordTime {\n\tpublic render() {\n\t\treturn (\n\t\t\t<Host class=\"discord-time\">\n\t\t\t\t<slot></slot>\n\t\t\t</Host>\n\t\t);\n\t}\n}\n",
    "import { Component, h } from '@stencil/core';\n\n@Component({\n\ttag: 'discord-underlined'\n})\nexport class DiscordUnderlined {\n\tpublic render() {\n\t\treturn (\n\t\t\t<u>\n\t\t\t\t<slot></slot>\n\t\t\t</u>\n\t\t);\n\t}\n}\n"
  ],
  "mappings": "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"
}
